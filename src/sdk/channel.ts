/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { channelGetMessagingChannel } from "../funcs/channelGetMessagingChannel.js";
import { channelListMessagingChannels } from "../funcs/channelListMessagingChannels.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Channel extends ClientSDK {
    /**
     * Retrieve a channel
     */
    async getMessagingChannel(
        request: operations.GetMessagingChannelRequest,
        options?: RequestOptions
    ): Promise<shared.MessagingChannel> {
        return unwrapAsync(channelGetMessagingChannel(this, request, options));
    }

    /**
     * List all channels
     */
    async listMessagingChannels(
        request: operations.ListMessagingChannelsRequest,
        options?: RequestOptions
    ): Promise<Array<shared.MessagingChannel>> {
        return unwrapAsync(channelListMessagingChannels(this, request, options));
    }
}
