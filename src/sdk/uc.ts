/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ucCreateUcComment } from "../funcs/ucCreateUcComment.js";
import { ucCreateUcContact } from "../funcs/ucCreateUcContact.js";
import { ucCreateUcRecording } from "../funcs/ucCreateUcRecording.js";
import { ucGetUcComment } from "../funcs/ucGetUcComment.js";
import { ucGetUcContact } from "../funcs/ucGetUcContact.js";
import { ucGetUcRecording } from "../funcs/ucGetUcRecording.js";
import { ucListUcCalls } from "../funcs/ucListUcCalls.js";
import { ucListUcComments } from "../funcs/ucListUcComments.js";
import { ucListUcContacts } from "../funcs/ucListUcContacts.js";
import { ucListUcRecordings } from "../funcs/ucListUcRecordings.js";
import { ucPatchUcComment } from "../funcs/ucPatchUcComment.js";
import { ucPatchUcContact } from "../funcs/ucPatchUcContact.js";
import { ucPatchUcRecording } from "../funcs/ucPatchUcRecording.js";
import { ucRemoveUcComment } from "../funcs/ucRemoveUcComment.js";
import { ucRemoveUcContact } from "../funcs/ucRemoveUcContact.js";
import { ucRemoveUcRecording } from "../funcs/ucRemoveUcRecording.js";
import { ucUpdateUcComment } from "../funcs/ucUpdateUcComment.js";
import { ucUpdateUcContact } from "../funcs/ucUpdateUcContact.js";
import { ucUpdateUcRecording } from "../funcs/ucUpdateUcRecording.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Uc extends ClientSDK {
  /**
   * Create a comment
   */
  async createUcComment(
    request: operations.CreateUcCommentRequest,
    options?: RequestOptions,
  ): Promise<shared.UcComment> {
    return unwrapAsync(ucCreateUcComment(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a contact
   */
  async createUcContact(
    request: operations.CreateUcContactRequest,
    options?: RequestOptions,
  ): Promise<shared.UcContact> {
    return unwrapAsync(ucCreateUcContact(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a recording
   */
  async createUcRecording(
    request: operations.CreateUcRecordingRequest,
    options?: RequestOptions,
  ): Promise<shared.UcRecording> {
    return unwrapAsync(ucCreateUcRecording(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a comment
   */
  async getUcComment(
    request: operations.GetUcCommentRequest,
    options?: RequestOptions,
  ): Promise<shared.UcComment> {
    return unwrapAsync(ucGetUcComment(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a contact
   */
  async getUcContact(
    request: operations.GetUcContactRequest,
    options?: RequestOptions,
  ): Promise<shared.UcContact> {
    return unwrapAsync(ucGetUcContact(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a recording
   */
  async getUcRecording(
    request: operations.GetUcRecordingRequest,
    options?: RequestOptions,
  ): Promise<shared.UcRecording> {
    return unwrapAsync(ucGetUcRecording(
      this,
      request,
      options,
    ));
  }

  /**
   * List all calls
   */
  async listUcCalls(
    request: operations.ListUcCallsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.UcCall>> {
    return unwrapAsync(ucListUcCalls(
      this,
      request,
      options,
    ));
  }

  /**
   * List all comments
   */
  async listUcComments(
    request: operations.ListUcCommentsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.UcComment>> {
    return unwrapAsync(ucListUcComments(
      this,
      request,
      options,
    ));
  }

  /**
   * List all contacts
   */
  async listUcContacts(
    request: operations.ListUcContactsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.UcContact>> {
    return unwrapAsync(ucListUcContacts(
      this,
      request,
      options,
    ));
  }

  /**
   * List all recordings
   */
  async listUcRecordings(
    request: operations.ListUcRecordingsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.UcRecording>> {
    return unwrapAsync(ucListUcRecordings(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a comment
   */
  async patchUcComment(
    request: operations.PatchUcCommentRequest,
    options?: RequestOptions,
  ): Promise<shared.UcComment> {
    return unwrapAsync(ucPatchUcComment(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a contact
   */
  async patchUcContact(
    request: operations.PatchUcContactRequest,
    options?: RequestOptions,
  ): Promise<shared.UcContact> {
    return unwrapAsync(ucPatchUcContact(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a recording
   */
  async patchUcRecording(
    request: operations.PatchUcRecordingRequest,
    options?: RequestOptions,
  ): Promise<shared.UcRecording> {
    return unwrapAsync(ucPatchUcRecording(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a comment
   */
  async removeUcComment(
    request: operations.RemoveUcCommentRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveUcCommentResponse | undefined> {
    return unwrapAsync(ucRemoveUcComment(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a contact
   */
  async removeUcContact(
    request: operations.RemoveUcContactRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveUcContactResponse | undefined> {
    return unwrapAsync(ucRemoveUcContact(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a recording
   */
  async removeUcRecording(
    request: operations.RemoveUcRecordingRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveUcRecordingResponse | undefined> {
    return unwrapAsync(ucRemoveUcRecording(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a comment
   */
  async updateUcComment(
    request: operations.UpdateUcCommentRequest,
    options?: RequestOptions,
  ): Promise<shared.UcComment> {
    return unwrapAsync(ucUpdateUcComment(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a contact
   */
  async updateUcContact(
    request: operations.UpdateUcContactRequest,
    options?: RequestOptions,
  ): Promise<shared.UcContact> {
    return unwrapAsync(ucUpdateUcContact(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a recording
   */
  async updateUcRecording(
    request: operations.UpdateUcRecordingRequest,
    options?: RequestOptions,
  ): Promise<shared.UcRecording> {
    return unwrapAsync(ucUpdateUcRecording(
      this,
      request,
      options,
    ));
  }
}
