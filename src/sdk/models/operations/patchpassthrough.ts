/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type PatchPassthroughRequest = {
    /**
     * integration-specific payload
     */
    requestBody?: { [k: string]: any } | undefined;
    /**
     * ID of the connection
     */
    connectionId: string;
    path: string;
};

/** @internal */
export const PatchPassthroughRequest$inboundSchema: z.ZodType<
    PatchPassthroughRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.record(z.any()).optional(),
        connection_id: z.string(),
        path: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
            connection_id: "connectionId",
        });
    });

/** @internal */
export type PatchPassthroughRequest$Outbound = {
    RequestBody?: { [k: string]: any } | undefined;
    connection_id: string;
    path: string;
};

/** @internal */
export const PatchPassthroughRequest$outboundSchema: z.ZodType<
    PatchPassthroughRequest$Outbound,
    z.ZodTypeDef,
    PatchPassthroughRequest
> = z
    .object({
        requestBody: z.record(z.any()).optional(),
        connectionId: z.string(),
        path: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
            connectionId: "connection_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchPassthroughRequest$ {
    /** @deprecated use `PatchPassthroughRequest$inboundSchema` instead. */
    export const inboundSchema = PatchPassthroughRequest$inboundSchema;
    /** @deprecated use `PatchPassthroughRequest$outboundSchema` instead. */
    export const outboundSchema = PatchPassthroughRequest$outboundSchema;
    /** @deprecated use `PatchPassthroughRequest$Outbound` instead. */
    export type Outbound = PatchPassthroughRequest$Outbound;
}
