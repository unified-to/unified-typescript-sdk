/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type UpdateUnifiedWebhookRequest = {
    /**
     * A webhook is used to POST new/updated information to your server.
     */
    webhook?: shared.Webhook | undefined;
    /**
     * ID of the Webhook
     */
    id: string;
};

/** @internal */
export const UpdateUnifiedWebhookRequest$inboundSchema: z.ZodType<
    UpdateUnifiedWebhookRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Webhook: shared.Webhook$inboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            Webhook: "webhook",
        });
    });

/** @internal */
export type UpdateUnifiedWebhookRequest$Outbound = {
    Webhook?: shared.Webhook$Outbound | undefined;
    id: string;
};

/** @internal */
export const UpdateUnifiedWebhookRequest$outboundSchema: z.ZodType<
    UpdateUnifiedWebhookRequest$Outbound,
    z.ZodTypeDef,
    UpdateUnifiedWebhookRequest
> = z
    .object({
        webhook: shared.Webhook$outboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            webhook: "Webhook",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUnifiedWebhookRequest$ {
    /** @deprecated use `UpdateUnifiedWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateUnifiedWebhookRequest$inboundSchema;
    /** @deprecated use `UpdateUnifiedWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateUnifiedWebhookRequest$outboundSchema;
    /** @deprecated use `UpdateUnifiedWebhookRequest$Outbound` instead. */
    export type Outbound = UpdateUnifiedWebhookRequest$Outbound;
}
