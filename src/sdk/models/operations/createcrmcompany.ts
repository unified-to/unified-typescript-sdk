/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateCrmCompanyRequest = {
    /**
     * A company represents an organization that optionally is associated with a deal and/or contacts
     */
    crmCompany?: shared.CrmCompany | undefined;
    /**
     * ID of the connection
     */
    connectionId: string;
};

/** @internal */
export const CreateCrmCompanyRequest$inboundSchema: z.ZodType<
    CreateCrmCompanyRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        CrmCompany: shared.CrmCompany$inboundSchema.optional(),
        connection_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            CrmCompany: "crmCompany",
            connection_id: "connectionId",
        });
    });

/** @internal */
export type CreateCrmCompanyRequest$Outbound = {
    CrmCompany?: shared.CrmCompany$Outbound | undefined;
    connection_id: string;
};

/** @internal */
export const CreateCrmCompanyRequest$outboundSchema: z.ZodType<
    CreateCrmCompanyRequest$Outbound,
    z.ZodTypeDef,
    CreateCrmCompanyRequest
> = z
    .object({
        crmCompany: shared.CrmCompany$outboundSchema.optional(),
        connectionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            crmCompany: "CrmCompany",
            connectionId: "connection_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCrmCompanyRequest$ {
    /** @deprecated use `CreateCrmCompanyRequest$inboundSchema` instead. */
    export const inboundSchema = CreateCrmCompanyRequest$inboundSchema;
    /** @deprecated use `CreateCrmCompanyRequest$outboundSchema` instead. */
    export const outboundSchema = CreateCrmCompanyRequest$outboundSchema;
    /** @deprecated use `CreateCrmCompanyRequest$Outbound` instead. */
    export type Outbound = CreateCrmCompanyRequest$Outbound;
}
