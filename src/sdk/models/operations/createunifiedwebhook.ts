/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type CreateUnifiedWebhookRequest = {
    /**
     * A webhook is used to POST new/updated information to your server.
     */
    webhook?: shared.Webhook | undefined;
    /**
     * When set, all of the existing data will sent back to your server.
     */
    includeAll?: boolean | undefined;
};

/** @internal */
export const CreateUnifiedWebhookRequest$inboundSchema: z.ZodType<
    CreateUnifiedWebhookRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Webhook: shared.Webhook$inboundSchema.optional(),
        include_all: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            Webhook: "webhook",
            include_all: "includeAll",
        });
    });

/** @internal */
export type CreateUnifiedWebhookRequest$Outbound = {
    Webhook?: shared.Webhook$Outbound | undefined;
    include_all?: boolean | undefined;
};

/** @internal */
export const CreateUnifiedWebhookRequest$outboundSchema: z.ZodType<
    CreateUnifiedWebhookRequest$Outbound,
    z.ZodTypeDef,
    CreateUnifiedWebhookRequest
> = z
    .object({
        webhook: shared.Webhook$outboundSchema.optional(),
        includeAll: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            webhook: "Webhook",
            includeAll: "include_all",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateUnifiedWebhookRequest$ {
    /** @deprecated use `CreateUnifiedWebhookRequest$inboundSchema` instead. */
    export const inboundSchema = CreateUnifiedWebhookRequest$inboundSchema;
    /** @deprecated use `CreateUnifiedWebhookRequest$outboundSchema` instead. */
    export const outboundSchema = CreateUnifiedWebhookRequest$outboundSchema;
    /** @deprecated use `CreateUnifiedWebhookRequest$Outbound` instead. */
    export type Outbound = CreateUnifiedWebhookRequest$Outbound;
}
