/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type UpdateAtsJobRequest = {
  atsJob?: shared.AtsJob | undefined;
  /**
   * ID of the connection
   */
  connectionId: string;
  /**
   * Comma-delimited fields to return
   */
  fields?: Array<string> | undefined;
  /**
   * ID of the Job
   */
  id: string;
};

/** @internal */
export const UpdateAtsJobRequest$inboundSchema: z.ZodType<
  UpdateAtsJobRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  AtsJob: shared.AtsJob$inboundSchema.optional(),
  connection_id: z.string(),
  fields: z.array(z.string()).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "AtsJob": "atsJob",
    "connection_id": "connectionId",
  });
});

/** @internal */
export type UpdateAtsJobRequest$Outbound = {
  AtsJob?: shared.AtsJob$Outbound | undefined;
  connection_id: string;
  fields?: Array<string> | undefined;
  id: string;
};

/** @internal */
export const UpdateAtsJobRequest$outboundSchema: z.ZodType<
  UpdateAtsJobRequest$Outbound,
  z.ZodTypeDef,
  UpdateAtsJobRequest
> = z.object({
  atsJob: shared.AtsJob$outboundSchema.optional(),
  connectionId: z.string(),
  fields: z.array(z.string()).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    atsJob: "AtsJob",
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAtsJobRequest$ {
  /** @deprecated use `UpdateAtsJobRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAtsJobRequest$inboundSchema;
  /** @deprecated use `UpdateAtsJobRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAtsJobRequest$outboundSchema;
  /** @deprecated use `UpdateAtsJobRequest$Outbound` instead. */
  export type Outbound = UpdateAtsJobRequest$Outbound;
}

export function updateAtsJobRequestToJSON(
  updateAtsJobRequest: UpdateAtsJobRequest,
): string {
  return JSON.stringify(
    UpdateAtsJobRequest$outboundSchema.parse(updateAtsJobRequest),
  );
}

export function updateAtsJobRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAtsJobRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAtsJobRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAtsJobRequest' from JSON`,
  );
}
