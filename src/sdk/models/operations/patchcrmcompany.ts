/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type PatchCrmCompanyRequest = {
  /**
   * A company represents an organization that optionally is associated with a deal and/or contacts
   */
  crmCompany?: shared.CrmCompany | undefined;
  /**
   * ID of the connection
   */
  connectionId: string;
  /**
   * Comma-delimited fields to return
   */
  fields?: Array<string> | undefined;
  /**
   * ID of the Company
   */
  id: string;
};

/** @internal */
export const PatchCrmCompanyRequest$inboundSchema: z.ZodType<
  PatchCrmCompanyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CrmCompany: shared.CrmCompany$inboundSchema.optional(),
  connection_id: z.string(),
  fields: z.array(z.string()).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "CrmCompany": "crmCompany",
    "connection_id": "connectionId",
  });
});

/** @internal */
export type PatchCrmCompanyRequest$Outbound = {
  CrmCompany?: shared.CrmCompany$Outbound | undefined;
  connection_id: string;
  fields?: Array<string> | undefined;
  id: string;
};

/** @internal */
export const PatchCrmCompanyRequest$outboundSchema: z.ZodType<
  PatchCrmCompanyRequest$Outbound,
  z.ZodTypeDef,
  PatchCrmCompanyRequest
> = z.object({
  crmCompany: shared.CrmCompany$outboundSchema.optional(),
  connectionId: z.string(),
  fields: z.array(z.string()).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    crmCompany: "CrmCompany",
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchCrmCompanyRequest$ {
  /** @deprecated use `PatchCrmCompanyRequest$inboundSchema` instead. */
  export const inboundSchema = PatchCrmCompanyRequest$inboundSchema;
  /** @deprecated use `PatchCrmCompanyRequest$outboundSchema` instead. */
  export const outboundSchema = PatchCrmCompanyRequest$outboundSchema;
  /** @deprecated use `PatchCrmCompanyRequest$Outbound` instead. */
  export type Outbound = PatchCrmCompanyRequest$Outbound;
}
