/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type GetAtsCandidateRequest = {
    /**
     * ID of the connection
     */
    connectionId: string;
    /**
     * Comma-delimited fields to return
     */
    fields?: Array<string> | undefined;
    /**
     * ID of the Candidate
     */
    id: string;
};

/** @internal */
export const GetAtsCandidateRequest$inboundSchema: z.ZodType<
    GetAtsCandidateRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        connection_id: z.string(),
        fields: z.array(z.string()).optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            connection_id: "connectionId",
        });
    });

/** @internal */
export type GetAtsCandidateRequest$Outbound = {
    connection_id: string;
    fields?: Array<string> | undefined;
    id: string;
};

/** @internal */
export const GetAtsCandidateRequest$outboundSchema: z.ZodType<
    GetAtsCandidateRequest$Outbound,
    z.ZodTypeDef,
    GetAtsCandidateRequest
> = z
    .object({
        connectionId: z.string(),
        fields: z.array(z.string()).optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            connectionId: "connection_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAtsCandidateRequest$ {
    /** @deprecated use `GetAtsCandidateRequest$inboundSchema` instead. */
    export const inboundSchema = GetAtsCandidateRequest$inboundSchema;
    /** @deprecated use `GetAtsCandidateRequest$outboundSchema` instead. */
    export const outboundSchema = GetAtsCandidateRequest$outboundSchema;
    /** @deprecated use `GetAtsCandidateRequest$Outbound` instead. */
    export type Outbound = GetAtsCandidateRequest$Outbound;
}
