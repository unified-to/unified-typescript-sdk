/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type UpdateKmsSpaceRequest = {
    kmsSpace?: shared.KmsSpace | undefined;
    /**
     * ID of the connection
     */
    connectionId: string;
    /**
     * ID of the Space
     */
    id: string;
};

/** @internal */
export const UpdateKmsSpaceRequest$inboundSchema: z.ZodType<
    UpdateKmsSpaceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        KmsSpace: shared.KmsSpace$inboundSchema.optional(),
        connection_id: z.string(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            KmsSpace: "kmsSpace",
            connection_id: "connectionId",
        });
    });

/** @internal */
export type UpdateKmsSpaceRequest$Outbound = {
    KmsSpace?: shared.KmsSpace$Outbound | undefined;
    connection_id: string;
    id: string;
};

/** @internal */
export const UpdateKmsSpaceRequest$outboundSchema: z.ZodType<
    UpdateKmsSpaceRequest$Outbound,
    z.ZodTypeDef,
    UpdateKmsSpaceRequest
> = z
    .object({
        kmsSpace: shared.KmsSpace$outboundSchema.optional(),
        connectionId: z.string(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            kmsSpace: "KmsSpace",
            connectionId: "connection_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKmsSpaceRequest$ {
    /** @deprecated use `UpdateKmsSpaceRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateKmsSpaceRequest$inboundSchema;
    /** @deprecated use `UpdateKmsSpaceRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateKmsSpaceRequest$outboundSchema;
    /** @deprecated use `UpdateKmsSpaceRequest$Outbound` instead. */
    export type Outbound = UpdateKmsSpaceRequest$Outbound;
}
