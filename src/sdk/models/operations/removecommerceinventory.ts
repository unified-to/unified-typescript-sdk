/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type RemoveCommerceInventoryRequest = {
  /**
   * ID of the connection
   */
  connectionId: string;
  /**
   * ID of the Inventory
   */
  id: string;
};

/** @internal */
export const RemoveCommerceInventoryRequest$inboundSchema: z.ZodType<
  RemoveCommerceInventoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  connection_id: z.string(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "connection_id": "connectionId",
  });
});

/** @internal */
export type RemoveCommerceInventoryRequest$Outbound = {
  connection_id: string;
  id: string;
};

/** @internal */
export const RemoveCommerceInventoryRequest$outboundSchema: z.ZodType<
  RemoveCommerceInventoryRequest$Outbound,
  z.ZodTypeDef,
  RemoveCommerceInventoryRequest
> = z.object({
  connectionId: z.string(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    connectionId: "connection_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveCommerceInventoryRequest$ {
  /** @deprecated use `RemoveCommerceInventoryRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveCommerceInventoryRequest$inboundSchema;
  /** @deprecated use `RemoveCommerceInventoryRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveCommerceInventoryRequest$outboundSchema;
  /** @deprecated use `RemoveCommerceInventoryRequest$Outbound` instead. */
  export type Outbound = RemoveCommerceInventoryRequest$Outbound;
}
