/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class ListEnrichPeopleRequest extends SpeakeasyBase {
    /**
     * ID of the connection
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=connection_id" })
    connectionId: string;

    /**
     * The email of the person to search
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
    email?: string;

    /**
     * The LinkedIn URL of the person to search
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=linkedin_url" })
    linkedinUrl?: string;

    /**
     * The name of the person to search
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
    name?: string;

    /**
     * The twitter handle of the person to search
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=twitter" })
    twitter?: string;
}

export class ListEnrichPeopleResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Successful
     */
    @SpeakeasyMetadata()
    enrichPerson?: shared.EnrichPerson;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
