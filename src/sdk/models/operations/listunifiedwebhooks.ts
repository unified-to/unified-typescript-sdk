/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

/**
 * A connection represents a specific authentication of an integration.
 */
export class ConnectionId extends SpeakeasyBase {}

/**
 * Informational object for supported integrations.
 */
export class IntegrationType extends SpeakeasyBase {}

export class ListUnifiedWebhooksRequest extends SpeakeasyBase {
    /**
     * A connection represents a specific authentication of an integration.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=connection_id" })
    connectionId?: ConnectionId;

    /**
     * Return only results whose created date is equal or less to this value
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_lte" })
    createdLte?: Date;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=env" })
    env?: string;

    /**
     * Informational object for supported integrations.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=integration_type" })
    integrationType?: IntegrationType;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * Filter the results for webhooks for only this object
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=object" })
    object?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset?: number;

    /**
     * Return only results whose updated date is equal or greater to this value
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=updated_gte" })
    updatedGte?: Date;
}

export class ListUnifiedWebhooksResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Successful
     */
    @SpeakeasyMetadata({ elemType: shared.Webhook })
    webhooks?: shared.Webhook[];
}
