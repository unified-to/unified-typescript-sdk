/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * An authentication object that represents a specific authorized user's connection to an integration.
 */
export class PropertyConnectionAuth extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "access_token" })
    accessToken?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "api_url" })
    apiUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "app_id" })
    appId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "authorize_url" })
    authorizeUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "client_id" })
    clientId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "client_secret" })
    clientSecret?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "consumer_key" })
    consumerKey?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "consumer_secret" })
    consumerSecret?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "emails" })
    emails?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "expires_in" })
    expiresIn?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "expiry_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiryDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "key" })
    key?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    meta?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * When integration.auth_type = "other", this field contains the authentication credentials in the same order as token_names
     */
    @SpeakeasyMetadata()
    @Expose({ name: "other_auth_info" })
    otherAuthInfo?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "pem" })
    pem?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "refresh_token" })
    refreshToken?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "refresh_token_expires_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    refreshTokenExpiresDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "refresh_token_expires_in" })
    refreshTokenExpiresIn?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "token" })
    token?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "token_url" })
    tokenUrl?: string;
}
