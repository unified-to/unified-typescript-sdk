/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommerceItemMedia } from "./commerceitemmedia";
import { Expose, Transform, Type } from "class-transformer";

export enum CommerceCollectionType {
    Collection = "COLLECTION",
    SavedSearch = "SAVED_SEARCH",
    Category = "CATEGORY",
}

/**
 * A collection of items/products/services
 */
export class CommerceCollection extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_featured" })
    isFeatured?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_visible" })
    isVisible?: boolean;

    @SpeakeasyMetadata({ elemType: CommerceItemMedia })
    @Expose({ name: "media" })
    @Type(() => CommerceItemMedia)
    media?: CommerceItemMedia[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "parent_id" })
    parentId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "public_description" })
    publicDescription?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "public_name" })
    publicName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "tags" })
    tags?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: CommerceCollectionType;

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
