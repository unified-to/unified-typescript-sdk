/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const LmsMediaType = {
  Image: "IMAGE",
  Headshot: "HEADSHOT",
  Video: "VIDEO",
  Web: "WEB",
  Document: "DOCUMENT",
  Other: "OTHER",
} as const;
export type LmsMediaType = ClosedEnum<typeof LmsMediaType>;

export type LmsMedia = {
  description?: string | undefined;
  name?: string | undefined;
  thumbnailUrl?: string | undefined;
  type?: LmsMediaType | undefined;
  url: string;
};

/** @internal */
export const LmsMediaType$inboundSchema: z.ZodNativeEnum<typeof LmsMediaType> =
  z.nativeEnum(LmsMediaType);

/** @internal */
export const LmsMediaType$outboundSchema: z.ZodNativeEnum<typeof LmsMediaType> =
  LmsMediaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsMediaType$ {
  /** @deprecated use `LmsMediaType$inboundSchema` instead. */
  export const inboundSchema = LmsMediaType$inboundSchema;
  /** @deprecated use `LmsMediaType$outboundSchema` instead. */
  export const outboundSchema = LmsMediaType$outboundSchema;
}

/** @internal */
export const LmsMedia$inboundSchema: z.ZodType<
  LmsMedia,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  name: z.string().optional(),
  thumbnail_url: z.string().optional(),
  type: LmsMediaType$inboundSchema.optional(),
  url: z.string(),
}).transform((v) => {
  return remap$(v, {
    "thumbnail_url": "thumbnailUrl",
  });
});

/** @internal */
export type LmsMedia$Outbound = {
  description?: string | undefined;
  name?: string | undefined;
  thumbnail_url?: string | undefined;
  type?: string | undefined;
  url: string;
};

/** @internal */
export const LmsMedia$outboundSchema: z.ZodType<
  LmsMedia$Outbound,
  z.ZodTypeDef,
  LmsMedia
> = z.object({
  description: z.string().optional(),
  name: z.string().optional(),
  thumbnailUrl: z.string().optional(),
  type: LmsMediaType$outboundSchema.optional(),
  url: z.string(),
}).transform((v) => {
  return remap$(v, {
    thumbnailUrl: "thumbnail_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsMedia$ {
  /** @deprecated use `LmsMedia$inboundSchema` instead. */
  export const inboundSchema = LmsMedia$inboundSchema;
  /** @deprecated use `LmsMedia$outboundSchema` instead. */
  export const outboundSchema = LmsMedia$outboundSchema;
  /** @deprecated use `LmsMedia$Outbound` instead. */
  export type Outbound = LmsMedia$Outbound;
}
