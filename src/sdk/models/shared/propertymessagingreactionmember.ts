/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PropertyMessagingReactionMember = {
  email?: string | undefined;
  imageUrl?: string | undefined;
  name?: string | undefined;
  userId?: string | undefined;
};

/** @internal */
export const PropertyMessagingReactionMember$inboundSchema: z.ZodType<
  PropertyMessagingReactionMember,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().optional(),
  image_url: z.string().optional(),
  name: z.string().optional(),
  user_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
    "user_id": "userId",
  });
});

/** @internal */
export type PropertyMessagingReactionMember$Outbound = {
  email?: string | undefined;
  image_url?: string | undefined;
  name?: string | undefined;
  user_id?: string | undefined;
};

/** @internal */
export const PropertyMessagingReactionMember$outboundSchema: z.ZodType<
  PropertyMessagingReactionMember$Outbound,
  z.ZodTypeDef,
  PropertyMessagingReactionMember
> = z.object({
  email: z.string().optional(),
  imageUrl: z.string().optional(),
  name: z.string().optional(),
  userId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyMessagingReactionMember$ {
  /** @deprecated use `PropertyMessagingReactionMember$inboundSchema` instead. */
  export const inboundSchema = PropertyMessagingReactionMember$inboundSchema;
  /** @deprecated use `PropertyMessagingReactionMember$outboundSchema` instead. */
  export const outboundSchema = PropertyMessagingReactionMember$outboundSchema;
  /** @deprecated use `PropertyMessagingReactionMember$Outbound` instead. */
  export type Outbound = PropertyMessagingReactionMember$Outbound;
}

export function propertyMessagingReactionMemberToJSON(
  propertyMessagingReactionMember: PropertyMessagingReactionMember,
): string {
  return JSON.stringify(
    PropertyMessagingReactionMember$outboundSchema.parse(
      propertyMessagingReactionMember,
    ),
  );
}

export function propertyMessagingReactionMemberFromJSON(
  jsonString: string,
): SafeParseResult<PropertyMessagingReactionMember, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertyMessagingReactionMember$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertyMessagingReactionMember' from JSON`,
  );
}
