/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A deal represents an opportunity with companies and/or contacts
 */
export class CrmDeal extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "closed_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    closedAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lost_reason" })
    lostReason?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pipeline" })
    pipeline?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pipeline_id" })
    pipelineId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "probability" })
    probability?: number;

    /**
     * The raw data returned by the integration for this deal
     */
    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "stage" })
    stage?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "stage_id" })
    stageId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tags" })
    tags?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "won_reason" })
    wonReason?: string;
}
