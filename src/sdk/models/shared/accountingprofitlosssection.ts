/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountingProfitlossAccount,
  AccountingProfitlossAccount$inboundSchema,
  AccountingProfitlossAccount$Outbound,
  AccountingProfitlossAccount$outboundSchema,
} from "./accountingprofitlossaccount.js";

export type AccountingProfitlossSection = {
  accounts?: Array<AccountingProfitlossAccount> | undefined;
  sectionName?: string | undefined;
  sectionType?: string | undefined;
  totalAmount?: number | undefined;
};

/** @internal */
export const AccountingProfitlossSection$inboundSchema: z.ZodType<
  AccountingProfitlossSection,
  z.ZodTypeDef,
  unknown
> = z.object({
  accounts: z.array(AccountingProfitlossAccount$inboundSchema).optional(),
  section_name: z.string().optional(),
  section_type: z.string().optional(),
  total_amount: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "section_name": "sectionName",
    "section_type": "sectionType",
    "total_amount": "totalAmount",
  });
});

/** @internal */
export type AccountingProfitlossSection$Outbound = {
  accounts?: Array<AccountingProfitlossAccount$Outbound> | undefined;
  section_name?: string | undefined;
  section_type?: string | undefined;
  total_amount?: number | undefined;
};

/** @internal */
export const AccountingProfitlossSection$outboundSchema: z.ZodType<
  AccountingProfitlossSection$Outbound,
  z.ZodTypeDef,
  AccountingProfitlossSection
> = z.object({
  accounts: z.array(AccountingProfitlossAccount$outboundSchema).optional(),
  sectionName: z.string().optional(),
  sectionType: z.string().optional(),
  totalAmount: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    sectionName: "section_name",
    sectionType: "section_type",
    totalAmount: "total_amount",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingProfitlossSection$ {
  /** @deprecated use `AccountingProfitlossSection$inboundSchema` instead. */
  export const inboundSchema = AccountingProfitlossSection$inboundSchema;
  /** @deprecated use `AccountingProfitlossSection$outboundSchema` instead. */
  export const outboundSchema = AccountingProfitlossSection$outboundSchema;
  /** @deprecated use `AccountingProfitlossSection$Outbound` instead. */
  export type Outbound = AccountingProfitlossSection$Outbound;
}

export function accountingProfitlossSectionToJSON(
  accountingProfitlossSection: AccountingProfitlossSection,
): string {
  return JSON.stringify(
    AccountingProfitlossSection$outboundSchema.parse(
      accountingProfitlossSection,
    ),
  );
}

export function accountingProfitlossSectionFromJSON(
  jsonString: string,
): SafeParseResult<AccountingProfitlossSection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountingProfitlossSection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountingProfitlossSection' from JSON`,
  );
}
