/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CrmTelephoneType = {
  Work: "WORK",
  Home: "HOME",
  Other: "OTHER",
  Fax: "FAX",
  Mobile: "MOBILE",
} as const;
export type CrmTelephoneType = OpenEnum<typeof CrmTelephoneType>;

export type CrmTelephone = {
  telephone: string;
  type?: CrmTelephoneType | undefined;
};

/** @internal */
export const CrmTelephoneType$inboundSchema: z.ZodType<
  CrmTelephoneType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CrmTelephoneType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CrmTelephoneType$outboundSchema: z.ZodType<
  CrmTelephoneType,
  z.ZodTypeDef,
  CrmTelephoneType
> = z.union([
  z.nativeEnum(CrmTelephoneType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmTelephoneType$ {
  /** @deprecated use `CrmTelephoneType$inboundSchema` instead. */
  export const inboundSchema = CrmTelephoneType$inboundSchema;
  /** @deprecated use `CrmTelephoneType$outboundSchema` instead. */
  export const outboundSchema = CrmTelephoneType$outboundSchema;
}

/** @internal */
export const CrmTelephone$inboundSchema: z.ZodType<
  CrmTelephone,
  z.ZodTypeDef,
  unknown
> = z.object({
  telephone: z.string(),
  type: CrmTelephoneType$inboundSchema.optional(),
});

/** @internal */
export type CrmTelephone$Outbound = {
  telephone: string;
  type?: string | undefined;
};

/** @internal */
export const CrmTelephone$outboundSchema: z.ZodType<
  CrmTelephone$Outbound,
  z.ZodTypeDef,
  CrmTelephone
> = z.object({
  telephone: z.string(),
  type: CrmTelephoneType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmTelephone$ {
  /** @deprecated use `CrmTelephone$inboundSchema` instead. */
  export const inboundSchema = CrmTelephone$inboundSchema;
  /** @deprecated use `CrmTelephone$outboundSchema` instead. */
  export const outboundSchema = CrmTelephone$outboundSchema;
  /** @deprecated use `CrmTelephone$Outbound` instead. */
  export type Outbound = CrmTelephone$Outbound;
}

export function crmTelephoneToJSON(crmTelephone: CrmTelephone): string {
  return JSON.stringify(CrmTelephone$outboundSchema.parse(crmTelephone));
}

export function crmTelephoneFromJSON(
  jsonString: string,
): SafeParseResult<CrmTelephone, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CrmTelephone$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CrmTelephone' from JSON`,
  );
}
