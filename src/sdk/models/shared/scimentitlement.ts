/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ScimEntitlement = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: string | undefined;
  value: string;
};

/** @internal */
export const ScimEntitlement$inboundSchema: z.ZodType<
  ScimEntitlement,
  z.ZodTypeDef,
  unknown
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: z.string().optional(),
  value: z.string(),
});

/** @internal */
export type ScimEntitlement$Outbound = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: string | undefined;
  value: string;
};

/** @internal */
export const ScimEntitlement$outboundSchema: z.ZodType<
  ScimEntitlement$Outbound,
  z.ZodTypeDef,
  ScimEntitlement
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: z.string().optional(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimEntitlement$ {
  /** @deprecated use `ScimEntitlement$inboundSchema` instead. */
  export const inboundSchema = ScimEntitlement$inboundSchema;
  /** @deprecated use `ScimEntitlement$outboundSchema` instead. */
  export const outboundSchema = ScimEntitlement$outboundSchema;
  /** @deprecated use `ScimEntitlement$Outbound` instead. */
  export type Outbound = ScimEntitlement$Outbound;
}
