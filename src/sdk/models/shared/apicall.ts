/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum ApiCallType {
    Login = "login",
    Webhook = "webhook",
    Inbound = "inbound",
}

export class ApiCall extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connection_id" })
    connectionId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "environment" })
    environment?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "external_xref" })
    externalXref?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "integration_type" })
    integrationType: string;

    @SpeakeasyMetadata()
    @Expose({ name: "ip_address" })
    ipAddress?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path: string;

    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: string;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: ApiCallType;

    @SpeakeasyMetadata()
    @Expose({ name: "workspace_id" })
    workspaceId: string;
}
