/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const HrisEmailType = {
  Work: "WORK",
  Home: "HOME",
  Other: "OTHER",
} as const;
export type HrisEmailType = OpenEnum<typeof HrisEmailType>;

export type HrisEmail = {
  email: string;
  type?: HrisEmailType | undefined;
};

/** @internal */
export const HrisEmailType$inboundSchema: z.ZodType<
  HrisEmailType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(HrisEmailType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const HrisEmailType$outboundSchema: z.ZodType<
  HrisEmailType,
  z.ZodTypeDef,
  HrisEmailType
> = z.union([
  z.nativeEnum(HrisEmailType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisEmailType$ {
  /** @deprecated use `HrisEmailType$inboundSchema` instead. */
  export const inboundSchema = HrisEmailType$inboundSchema;
  /** @deprecated use `HrisEmailType$outboundSchema` instead. */
  export const outboundSchema = HrisEmailType$outboundSchema;
}

/** @internal */
export const HrisEmail$inboundSchema: z.ZodType<
  HrisEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  type: HrisEmailType$inboundSchema.optional(),
});

/** @internal */
export type HrisEmail$Outbound = {
  email: string;
  type?: string | undefined;
};

/** @internal */
export const HrisEmail$outboundSchema: z.ZodType<
  HrisEmail$Outbound,
  z.ZodTypeDef,
  HrisEmail
> = z.object({
  email: z.string(),
  type: HrisEmailType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisEmail$ {
  /** @deprecated use `HrisEmail$inboundSchema` instead. */
  export const inboundSchema = HrisEmail$inboundSchema;
  /** @deprecated use `HrisEmail$outboundSchema` instead. */
  export const outboundSchema = HrisEmail$outboundSchema;
  /** @deprecated use `HrisEmail$Outbound` instead. */
  export type Outbound = HrisEmail$Outbound;
}

export function hrisEmailToJSON(hrisEmail: HrisEmail): string {
  return JSON.stringify(HrisEmail$outboundSchema.parse(hrisEmail));
}

export function hrisEmailFromJSON(
  jsonString: string,
): SafeParseResult<HrisEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisEmail' from JSON`,
  );
}
