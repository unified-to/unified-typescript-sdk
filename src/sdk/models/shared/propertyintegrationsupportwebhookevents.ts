/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PropertyIntegrationSupportWebhookEventsCreated,
  PropertyIntegrationSupportWebhookEventsCreated$inboundSchema,
  PropertyIntegrationSupportWebhookEventsCreated$outboundSchema,
} from "./propertyintegrationsupportwebhookeventscreated.js";
import {
  PropertyIntegrationSupportWebhookEventsDeleted,
  PropertyIntegrationSupportWebhookEventsDeleted$inboundSchema,
  PropertyIntegrationSupportWebhookEventsDeleted$outboundSchema,
} from "./propertyintegrationsupportwebhookeventsdeleted.js";
import {
  PropertyIntegrationSupportWebhookEventsUpdated,
  PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema,
  PropertyIntegrationSupportWebhookEventsUpdated$outboundSchema,
} from "./propertyintegrationsupportwebhookeventsupdated.js";

export type PropertyIntegrationSupportWebhookEvents = {
  created?: Array<PropertyIntegrationSupportWebhookEventsCreated> | undefined;
  deleted?: Array<PropertyIntegrationSupportWebhookEventsDeleted> | undefined;
  updated?: Array<PropertyIntegrationSupportWebhookEventsUpdated> | undefined;
};

/** @internal */
export const PropertyIntegrationSupportWebhookEvents$inboundSchema: z.ZodType<
  PropertyIntegrationSupportWebhookEvents,
  z.ZodTypeDef,
  unknown
> = z.object({
  created: z.array(PropertyIntegrationSupportWebhookEventsCreated$inboundSchema)
    .optional(),
  deleted: z.array(PropertyIntegrationSupportWebhookEventsDeleted$inboundSchema)
    .optional(),
  updated: z.array(PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema)
    .optional(),
});

/** @internal */
export type PropertyIntegrationSupportWebhookEvents$Outbound = {
  created?: Array<string> | undefined;
  deleted?: Array<string> | undefined;
  updated?: Array<string> | undefined;
};

/** @internal */
export const PropertyIntegrationSupportWebhookEvents$outboundSchema: z.ZodType<
  PropertyIntegrationSupportWebhookEvents$Outbound,
  z.ZodTypeDef,
  PropertyIntegrationSupportWebhookEvents
> = z.object({
  created: z.array(
    PropertyIntegrationSupportWebhookEventsCreated$outboundSchema,
  ).optional(),
  deleted: z.array(
    PropertyIntegrationSupportWebhookEventsDeleted$outboundSchema,
  ).optional(),
  updated: z.array(
    PropertyIntegrationSupportWebhookEventsUpdated$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyIntegrationSupportWebhookEvents$ {
  /** @deprecated use `PropertyIntegrationSupportWebhookEvents$inboundSchema` instead. */
  export const inboundSchema =
    PropertyIntegrationSupportWebhookEvents$inboundSchema;
  /** @deprecated use `PropertyIntegrationSupportWebhookEvents$outboundSchema` instead. */
  export const outboundSchema =
    PropertyIntegrationSupportWebhookEvents$outboundSchema;
  /** @deprecated use `PropertyIntegrationSupportWebhookEvents$Outbound` instead. */
  export type Outbound = PropertyIntegrationSupportWebhookEvents$Outbound;
}

export function propertyIntegrationSupportWebhookEventsToJSON(
  propertyIntegrationSupportWebhookEvents:
    PropertyIntegrationSupportWebhookEvents,
): string {
  return JSON.stringify(
    PropertyIntegrationSupportWebhookEvents$outboundSchema.parse(
      propertyIntegrationSupportWebhookEvents,
    ),
  );
}

export function propertyIntegrationSupportWebhookEventsFromJSON(
  jsonString: string,
): SafeParseResult<
  PropertyIntegrationSupportWebhookEvents,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PropertyIntegrationSupportWebhookEvents$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PropertyIntegrationSupportWebhookEvents' from JSON`,
  );
}
