/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CommerceMetadata = {};

/** @internal */
export const CommerceMetadata$inboundSchema: z.ZodType<
  CommerceMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CommerceMetadata$Outbound = {};

/** @internal */
export const CommerceMetadata$outboundSchema: z.ZodType<
  CommerceMetadata$Outbound,
  z.ZodTypeDef,
  CommerceMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceMetadata$ {
  /** @deprecated use `CommerceMetadata$inboundSchema` instead. */
  export const inboundSchema = CommerceMetadata$inboundSchema;
  /** @deprecated use `CommerceMetadata$outboundSchema` instead. */
  export const outboundSchema = CommerceMetadata$outboundSchema;
  /** @deprecated use `CommerceMetadata$Outbound` instead. */
  export type Outbound = CommerceMetadata$Outbound;
}

export function commerceMetadataToJSON(
  commerceMetadata: CommerceMetadata,
): string {
  return JSON.stringify(
    CommerceMetadata$outboundSchema.parse(commerceMetadata),
  );
}

export function commerceMetadataFromJSON(
  jsonString: string,
): SafeParseResult<CommerceMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CommerceMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CommerceMetadata' from JSON`,
  );
}
