/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const PropertyUserMetaResourceType = {
  User: "User",
  Group: "Group",
} as const;
export type PropertyUserMetaResourceType = ClosedEnum<
  typeof PropertyUserMetaResourceType
>;

export type PropertyUserMeta = {
  created?: string | undefined;
  lastModified?: string | undefined;
  location?: string | undefined;
  resourceType?: PropertyUserMetaResourceType | undefined;
  version?: string | undefined;
};

/** @internal */
export const PropertyUserMetaResourceType$inboundSchema: z.ZodNativeEnum<
  typeof PropertyUserMetaResourceType
> = z.nativeEnum(PropertyUserMetaResourceType);

/** @internal */
export const PropertyUserMetaResourceType$outboundSchema: z.ZodNativeEnum<
  typeof PropertyUserMetaResourceType
> = PropertyUserMetaResourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyUserMetaResourceType$ {
  /** @deprecated use `PropertyUserMetaResourceType$inboundSchema` instead. */
  export const inboundSchema = PropertyUserMetaResourceType$inboundSchema;
  /** @deprecated use `PropertyUserMetaResourceType$outboundSchema` instead. */
  export const outboundSchema = PropertyUserMetaResourceType$outboundSchema;
}

/** @internal */
export const PropertyUserMeta$inboundSchema: z.ZodType<
  PropertyUserMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  created: z.string().optional(),
  lastModified: z.string().optional(),
  location: z.string().optional(),
  resourceType: PropertyUserMetaResourceType$inboundSchema.optional(),
  version: z.string().optional(),
});

/** @internal */
export type PropertyUserMeta$Outbound = {
  created?: string | undefined;
  lastModified?: string | undefined;
  location?: string | undefined;
  resourceType?: string | undefined;
  version?: string | undefined;
};

/** @internal */
export const PropertyUserMeta$outboundSchema: z.ZodType<
  PropertyUserMeta$Outbound,
  z.ZodTypeDef,
  PropertyUserMeta
> = z.object({
  created: z.string().optional(),
  lastModified: z.string().optional(),
  location: z.string().optional(),
  resourceType: PropertyUserMetaResourceType$outboundSchema.optional(),
  version: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyUserMeta$ {
  /** @deprecated use `PropertyUserMeta$inboundSchema` instead. */
  export const inboundSchema = PropertyUserMeta$inboundSchema;
  /** @deprecated use `PropertyUserMeta$outboundSchema` instead. */
  export const outboundSchema = PropertyUserMeta$outboundSchema;
  /** @deprecated use `PropertyUserMeta$Outbound` instead. */
  export type Outbound = PropertyUserMeta$Outbound;
}
