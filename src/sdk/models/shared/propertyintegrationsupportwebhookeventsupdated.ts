/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const PropertyIntegrationSupportWebhookEventsUpdated = {
  Virtual: "virtual",
  Native: "native",
} as const;
export type PropertyIntegrationSupportWebhookEventsUpdated = ClosedEnum<
  typeof PropertyIntegrationSupportWebhookEventsUpdated
>;

/** @internal */
export const PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema:
  z.ZodNativeEnum<typeof PropertyIntegrationSupportWebhookEventsUpdated> = z
    .nativeEnum(PropertyIntegrationSupportWebhookEventsUpdated);

/** @internal */
export const PropertyIntegrationSupportWebhookEventsUpdated$outboundSchema:
  z.ZodNativeEnum<typeof PropertyIntegrationSupportWebhookEventsUpdated> =
    PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyIntegrationSupportWebhookEventsUpdated$ {
  /** @deprecated use `PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema` instead. */
  export const inboundSchema =
    PropertyIntegrationSupportWebhookEventsUpdated$inboundSchema;
  /** @deprecated use `PropertyIntegrationSupportWebhookEventsUpdated$outboundSchema` instead. */
  export const outboundSchema =
    PropertyIntegrationSupportWebhookEventsUpdated$outboundSchema;
}
