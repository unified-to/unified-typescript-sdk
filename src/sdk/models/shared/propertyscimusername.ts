/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type PropertyScimUserName = {
  familyName?: string | undefined;
  formatted?: string | undefined;
  givenName?: string | undefined;
  honorificPrefix?: string | undefined;
  honorificSuffix?: string | undefined;
  middleName?: string | undefined;
};

/** @internal */
export const PropertyScimUserName$inboundSchema: z.ZodType<
  PropertyScimUserName,
  z.ZodTypeDef,
  unknown
> = z.object({
  familyName: z.string().optional(),
  formatted: z.string().optional(),
  givenName: z.string().optional(),
  honorificPrefix: z.string().optional(),
  honorificSuffix: z.string().optional(),
  middleName: z.string().optional(),
});

/** @internal */
export type PropertyScimUserName$Outbound = {
  familyName?: string | undefined;
  formatted?: string | undefined;
  givenName?: string | undefined;
  honorificPrefix?: string | undefined;
  honorificSuffix?: string | undefined;
  middleName?: string | undefined;
};

/** @internal */
export const PropertyScimUserName$outboundSchema: z.ZodType<
  PropertyScimUserName$Outbound,
  z.ZodTypeDef,
  PropertyScimUserName
> = z.object({
  familyName: z.string().optional(),
  formatted: z.string().optional(),
  givenName: z.string().optional(),
  honorificPrefix: z.string().optional(),
  honorificSuffix: z.string().optional(),
  middleName: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyScimUserName$ {
  /** @deprecated use `PropertyScimUserName$inboundSchema` instead. */
  export const inboundSchema = PropertyScimUserName$inboundSchema;
  /** @deprecated use `PropertyScimUserName$outboundSchema` instead. */
  export const outboundSchema = PropertyScimUserName$outboundSchema;
  /** @deprecated use `PropertyScimUserName$Outbound` instead. */
  export type Outbound = PropertyScimUserName$Outbound;
}
