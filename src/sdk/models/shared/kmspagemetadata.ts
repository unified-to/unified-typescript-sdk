/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type KmsPageMetadata1 = {};

export type KmsPageMetadata5 = KmsPageMetadata1 | string | number | boolean;

export type KmsPageMetadataExtraData =
  | { [k: string]: any }
  | string
  | number
  | boolean
  | Array<KmsPageMetadata1 | string | number | boolean>;

export const KmsPageMetadataFormat = {
  Text: "TEXT",
  Number: "NUMBER",
  Date: "DATE",
  Boolean: "BOOLEAN",
  File: "FILE",
  Textarea: "TEXTAREA",
  SingleSelect: "SINGLE_SELECT",
  MultipleSelect: "MULTIPLE_SELECT",
  Measurement: "MEASUREMENT",
  Price: "PRICE",
  YesNo: "YES_NO",
  Currency: "CURRENCY",
  Url: "URL",
} as const;
export type KmsPageMetadataFormat = OpenEnum<typeof KmsPageMetadataFormat>;

export type KmsPageMetadataSchemas1 = {};

export type KmsPageMetadataSchemas5 =
  | KmsPageMetadataSchemas1
  | string
  | number
  | boolean;

export type KmsPageMetadataValue =
  | { [k: string]: any }
  | string
  | number
  | boolean
  | Array<KmsPageMetadataSchemas1 | string | number | boolean>;

export type KmsPageMetadata = {
  extraData?:
    | { [k: string]: any }
    | string
    | number
    | boolean
    | Array<KmsPageMetadata1 | string | number | boolean>
    | undefined;
  format?: KmsPageMetadataFormat | undefined;
  id?: string | undefined;
  key?: string | undefined;
  namespace?: string | undefined;
  slug?: string | undefined;
  type?: string | undefined;
  value?:
    | { [k: string]: any }
    | string
    | number
    | boolean
    | Array<KmsPageMetadataSchemas1 | string | number | boolean>
    | undefined;
};

/** @internal */
export const KmsPageMetadata1$inboundSchema: z.ZodType<
  KmsPageMetadata1,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type KmsPageMetadata1$Outbound = {};

/** @internal */
export const KmsPageMetadata1$outboundSchema: z.ZodType<
  KmsPageMetadata1$Outbound,
  z.ZodTypeDef,
  KmsPageMetadata1
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadata1$ {
  /** @deprecated use `KmsPageMetadata1$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadata1$inboundSchema;
  /** @deprecated use `KmsPageMetadata1$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadata1$outboundSchema;
  /** @deprecated use `KmsPageMetadata1$Outbound` instead. */
  export type Outbound = KmsPageMetadata1$Outbound;
}

export function kmsPageMetadata1ToJSON(
  kmsPageMetadata1: KmsPageMetadata1,
): string {
  return JSON.stringify(
    KmsPageMetadata1$outboundSchema.parse(kmsPageMetadata1),
  );
}

export function kmsPageMetadata1FromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadata1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadata1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadata1' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadata5$inboundSchema: z.ZodType<
  KmsPageMetadata5,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => KmsPageMetadata1$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
]);

/** @internal */
export type KmsPageMetadata5$Outbound =
  | KmsPageMetadata1$Outbound
  | string
  | number
  | boolean;

/** @internal */
export const KmsPageMetadata5$outboundSchema: z.ZodType<
  KmsPageMetadata5$Outbound,
  z.ZodTypeDef,
  KmsPageMetadata5
> = z.union([
  z.lazy(() => KmsPageMetadata1$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadata5$ {
  /** @deprecated use `KmsPageMetadata5$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadata5$inboundSchema;
  /** @deprecated use `KmsPageMetadata5$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadata5$outboundSchema;
  /** @deprecated use `KmsPageMetadata5$Outbound` instead. */
  export type Outbound = KmsPageMetadata5$Outbound;
}

export function kmsPageMetadata5ToJSON(
  kmsPageMetadata5: KmsPageMetadata5,
): string {
  return JSON.stringify(
    KmsPageMetadata5$outboundSchema.parse(kmsPageMetadata5),
  );
}

export function kmsPageMetadata5FromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadata5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadata5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadata5' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadataExtraData$inboundSchema: z.ZodType<
  KmsPageMetadataExtraData,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.record(z.any()),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(
    z.union([
      z.lazy(() => KmsPageMetadata1$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
    ]),
  ),
]);

/** @internal */
export type KmsPageMetadataExtraData$Outbound =
  | { [k: string]: any }
  | string
  | number
  | boolean
  | Array<KmsPageMetadata1$Outbound | string | number | boolean>;

/** @internal */
export const KmsPageMetadataExtraData$outboundSchema: z.ZodType<
  KmsPageMetadataExtraData$Outbound,
  z.ZodTypeDef,
  KmsPageMetadataExtraData
> = z.union([
  z.record(z.any()),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(
    z.union([
      z.lazy(() => KmsPageMetadata1$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
    ]),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadataExtraData$ {
  /** @deprecated use `KmsPageMetadataExtraData$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadataExtraData$inboundSchema;
  /** @deprecated use `KmsPageMetadataExtraData$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadataExtraData$outboundSchema;
  /** @deprecated use `KmsPageMetadataExtraData$Outbound` instead. */
  export type Outbound = KmsPageMetadataExtraData$Outbound;
}

export function kmsPageMetadataExtraDataToJSON(
  kmsPageMetadataExtraData: KmsPageMetadataExtraData,
): string {
  return JSON.stringify(
    KmsPageMetadataExtraData$outboundSchema.parse(kmsPageMetadataExtraData),
  );
}

export function kmsPageMetadataExtraDataFromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadataExtraData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadataExtraData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadataExtraData' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadataFormat$inboundSchema: z.ZodType<
  KmsPageMetadataFormat,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(KmsPageMetadataFormat),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const KmsPageMetadataFormat$outboundSchema: z.ZodType<
  KmsPageMetadataFormat,
  z.ZodTypeDef,
  KmsPageMetadataFormat
> = z.union([
  z.nativeEnum(KmsPageMetadataFormat),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadataFormat$ {
  /** @deprecated use `KmsPageMetadataFormat$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadataFormat$inboundSchema;
  /** @deprecated use `KmsPageMetadataFormat$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadataFormat$outboundSchema;
}

/** @internal */
export const KmsPageMetadataSchemas1$inboundSchema: z.ZodType<
  KmsPageMetadataSchemas1,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type KmsPageMetadataSchemas1$Outbound = {};

/** @internal */
export const KmsPageMetadataSchemas1$outboundSchema: z.ZodType<
  KmsPageMetadataSchemas1$Outbound,
  z.ZodTypeDef,
  KmsPageMetadataSchemas1
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadataSchemas1$ {
  /** @deprecated use `KmsPageMetadataSchemas1$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadataSchemas1$inboundSchema;
  /** @deprecated use `KmsPageMetadataSchemas1$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadataSchemas1$outboundSchema;
  /** @deprecated use `KmsPageMetadataSchemas1$Outbound` instead. */
  export type Outbound = KmsPageMetadataSchemas1$Outbound;
}

export function kmsPageMetadataSchemas1ToJSON(
  kmsPageMetadataSchemas1: KmsPageMetadataSchemas1,
): string {
  return JSON.stringify(
    KmsPageMetadataSchemas1$outboundSchema.parse(kmsPageMetadataSchemas1),
  );
}

export function kmsPageMetadataSchemas1FromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadataSchemas1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadataSchemas1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadataSchemas1' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadataSchemas5$inboundSchema: z.ZodType<
  KmsPageMetadataSchemas5,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => KmsPageMetadataSchemas1$inboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
]);

/** @internal */
export type KmsPageMetadataSchemas5$Outbound =
  | KmsPageMetadataSchemas1$Outbound
  | string
  | number
  | boolean;

/** @internal */
export const KmsPageMetadataSchemas5$outboundSchema: z.ZodType<
  KmsPageMetadataSchemas5$Outbound,
  z.ZodTypeDef,
  KmsPageMetadataSchemas5
> = z.union([
  z.lazy(() => KmsPageMetadataSchemas1$outboundSchema),
  z.string(),
  z.number(),
  z.boolean(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadataSchemas5$ {
  /** @deprecated use `KmsPageMetadataSchemas5$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadataSchemas5$inboundSchema;
  /** @deprecated use `KmsPageMetadataSchemas5$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadataSchemas5$outboundSchema;
  /** @deprecated use `KmsPageMetadataSchemas5$Outbound` instead. */
  export type Outbound = KmsPageMetadataSchemas5$Outbound;
}

export function kmsPageMetadataSchemas5ToJSON(
  kmsPageMetadataSchemas5: KmsPageMetadataSchemas5,
): string {
  return JSON.stringify(
    KmsPageMetadataSchemas5$outboundSchema.parse(kmsPageMetadataSchemas5),
  );
}

export function kmsPageMetadataSchemas5FromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadataSchemas5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadataSchemas5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadataSchemas5' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadataValue$inboundSchema: z.ZodType<
  KmsPageMetadataValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.record(z.any()),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(
    z.union([
      z.lazy(() => KmsPageMetadataSchemas1$inboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
    ]),
  ),
]);

/** @internal */
export type KmsPageMetadataValue$Outbound =
  | { [k: string]: any }
  | string
  | number
  | boolean
  | Array<KmsPageMetadataSchemas1$Outbound | string | number | boolean>;

/** @internal */
export const KmsPageMetadataValue$outboundSchema: z.ZodType<
  KmsPageMetadataValue$Outbound,
  z.ZodTypeDef,
  KmsPageMetadataValue
> = z.union([
  z.record(z.any()),
  z.string(),
  z.number(),
  z.boolean(),
  z.array(
    z.union([
      z.lazy(() => KmsPageMetadataSchemas1$outboundSchema),
      z.string(),
      z.number(),
      z.boolean(),
    ]),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadataValue$ {
  /** @deprecated use `KmsPageMetadataValue$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadataValue$inboundSchema;
  /** @deprecated use `KmsPageMetadataValue$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadataValue$outboundSchema;
  /** @deprecated use `KmsPageMetadataValue$Outbound` instead. */
  export type Outbound = KmsPageMetadataValue$Outbound;
}

export function kmsPageMetadataValueToJSON(
  kmsPageMetadataValue: KmsPageMetadataValue,
): string {
  return JSON.stringify(
    KmsPageMetadataValue$outboundSchema.parse(kmsPageMetadataValue),
  );
}

export function kmsPageMetadataValueFromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadataValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadataValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadataValue' from JSON`,
  );
}

/** @internal */
export const KmsPageMetadata$inboundSchema: z.ZodType<
  KmsPageMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  extra_data: z.union([
    z.record(z.any()),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(
      z.union([
        z.lazy(() => KmsPageMetadata1$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
      ]),
    ),
  ]).optional(),
  format: KmsPageMetadataFormat$inboundSchema.optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  namespace: z.string().optional(),
  slug: z.string().optional(),
  type: z.string().optional(),
  value: z.union([
    z.record(z.any()),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(
      z.union([
        z.lazy(() => KmsPageMetadataSchemas1$inboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
      ]),
    ),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "extra_data": "extraData",
  });
});

/** @internal */
export type KmsPageMetadata$Outbound = {
  extra_data?:
    | { [k: string]: any }
    | string
    | number
    | boolean
    | Array<KmsPageMetadata1$Outbound | string | number | boolean>
    | undefined;
  format?: string | undefined;
  id?: string | undefined;
  key?: string | undefined;
  namespace?: string | undefined;
  slug?: string | undefined;
  type?: string | undefined;
  value?:
    | { [k: string]: any }
    | string
    | number
    | boolean
    | Array<KmsPageMetadataSchemas1$Outbound | string | number | boolean>
    | undefined;
};

/** @internal */
export const KmsPageMetadata$outboundSchema: z.ZodType<
  KmsPageMetadata$Outbound,
  z.ZodTypeDef,
  KmsPageMetadata
> = z.object({
  extraData: z.union([
    z.record(z.any()),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(
      z.union([
        z.lazy(() => KmsPageMetadata1$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
      ]),
    ),
  ]).optional(),
  format: KmsPageMetadataFormat$outboundSchema.optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  namespace: z.string().optional(),
  slug: z.string().optional(),
  type: z.string().optional(),
  value: z.union([
    z.record(z.any()),
    z.string(),
    z.number(),
    z.boolean(),
    z.array(
      z.union([
        z.lazy(() => KmsPageMetadataSchemas1$outboundSchema),
        z.string(),
        z.number(),
        z.boolean(),
      ]),
    ),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    extraData: "extra_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadata$ {
  /** @deprecated use `KmsPageMetadata$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadata$inboundSchema;
  /** @deprecated use `KmsPageMetadata$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadata$outboundSchema;
  /** @deprecated use `KmsPageMetadata$Outbound` instead. */
  export type Outbound = KmsPageMetadata$Outbound;
}

export function kmsPageMetadataToJSON(
  kmsPageMetadata: KmsPageMetadata,
): string {
  return JSON.stringify(KmsPageMetadata$outboundSchema.parse(kmsPageMetadata));
}

export function kmsPageMetadataFromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadata' from JSON`,
  );
}
