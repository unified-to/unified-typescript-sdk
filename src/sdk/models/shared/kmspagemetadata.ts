/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type KmsPageMetadata = {
  name: string;
  type?: string | undefined;
  value?: string | undefined;
};

/** @internal */
export const KmsPageMetadata$inboundSchema: z.ZodType<
  KmsPageMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  type: z.string().optional(),
  value: z.string().optional(),
});

/** @internal */
export type KmsPageMetadata$Outbound = {
  name: string;
  type?: string | undefined;
  value?: string | undefined;
};

/** @internal */
export const KmsPageMetadata$outboundSchema: z.ZodType<
  KmsPageMetadata$Outbound,
  z.ZodTypeDef,
  KmsPageMetadata
> = z.object({
  name: z.string(),
  type: z.string().optional(),
  value: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace KmsPageMetadata$ {
  /** @deprecated use `KmsPageMetadata$inboundSchema` instead. */
  export const inboundSchema = KmsPageMetadata$inboundSchema;
  /** @deprecated use `KmsPageMetadata$outboundSchema` instead. */
  export const outboundSchema = KmsPageMetadata$outboundSchema;
  /** @deprecated use `KmsPageMetadata$Outbound` instead. */
  export type Outbound = KmsPageMetadata$Outbound;
}

export function kmsPageMetadataToJSON(
  kmsPageMetadata: KmsPageMetadata,
): string {
  return JSON.stringify(KmsPageMetadata$outboundSchema.parse(kmsPageMetadata));
}

export function kmsPageMetadataFromJSON(
  jsonString: string,
): SafeParseResult<KmsPageMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => KmsPageMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'KmsPageMetadata' from JSON`,
  );
}
