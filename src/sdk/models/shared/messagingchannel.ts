/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MessagingMember } from "./messagingmember";
import { Expose, Transform, Type } from "class-transformer";

export class MessagingChannel extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "has_subchannels" })
    hasSubchannels?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_private" })
    isPrivate?: boolean;

    @SpeakeasyMetadata({ elemType: MessagingMember })
    @Expose({ name: "members" })
    @Type(() => MessagingMember)
    members?: MessagingMember[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "parent_channel_id" })
    parentChannelId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    updatedAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "web_url" })
    webUrl?: string;
}
