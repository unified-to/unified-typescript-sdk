/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const PropertyCalendarEventRecurrenceOnDays = {
  Su: "SU",
  Mo: "MO",
  Tu: "TU",
  We: "WE",
  Th: "TH",
  Fr: "FR",
  Sa: "SA",
} as const;
export type PropertyCalendarEventRecurrenceOnDays = OpenEnum<
  typeof PropertyCalendarEventRecurrenceOnDays
>;

/** @internal */
export const PropertyCalendarEventRecurrenceOnDays$inboundSchema: z.ZodType<
  PropertyCalendarEventRecurrenceOnDays,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PropertyCalendarEventRecurrenceOnDays),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PropertyCalendarEventRecurrenceOnDays$outboundSchema: z.ZodType<
  PropertyCalendarEventRecurrenceOnDays,
  z.ZodTypeDef,
  PropertyCalendarEventRecurrenceOnDays
> = z.union([
  z.nativeEnum(PropertyCalendarEventRecurrenceOnDays),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyCalendarEventRecurrenceOnDays$ {
  /** @deprecated use `PropertyCalendarEventRecurrenceOnDays$inboundSchema` instead. */
  export const inboundSchema =
    PropertyCalendarEventRecurrenceOnDays$inboundSchema;
  /** @deprecated use `PropertyCalendarEventRecurrenceOnDays$outboundSchema` instead. */
  export const outboundSchema =
    PropertyCalendarEventRecurrenceOnDays$outboundSchema;
}
