/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PropertyUcCallTelephoneType = {
  Work: "WORK",
  Home: "HOME",
  Other: "OTHER",
  Fax: "FAX",
  Mobile: "MOBILE",
} as const;
export type PropertyUcCallTelephoneType = ClosedEnum<
  typeof PropertyUcCallTelephoneType
>;

/**
 * The telephone number called
 */
export type PropertyUcCallTelephone = {
  telephone: string;
  type?: PropertyUcCallTelephoneType | undefined;
};

/** @internal */
export const PropertyUcCallTelephoneType$inboundSchema: z.ZodNativeEnum<
  typeof PropertyUcCallTelephoneType
> = z.nativeEnum(PropertyUcCallTelephoneType);

/** @internal */
export const PropertyUcCallTelephoneType$outboundSchema: z.ZodNativeEnum<
  typeof PropertyUcCallTelephoneType
> = PropertyUcCallTelephoneType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyUcCallTelephoneType$ {
  /** @deprecated use `PropertyUcCallTelephoneType$inboundSchema` instead. */
  export const inboundSchema = PropertyUcCallTelephoneType$inboundSchema;
  /** @deprecated use `PropertyUcCallTelephoneType$outboundSchema` instead. */
  export const outboundSchema = PropertyUcCallTelephoneType$outboundSchema;
}

/** @internal */
export const PropertyUcCallTelephone$inboundSchema: z.ZodType<
  PropertyUcCallTelephone,
  z.ZodTypeDef,
  unknown
> = z.object({
  telephone: z.string(),
  type: PropertyUcCallTelephoneType$inboundSchema.optional(),
});

/** @internal */
export type PropertyUcCallTelephone$Outbound = {
  telephone: string;
  type?: string | undefined;
};

/** @internal */
export const PropertyUcCallTelephone$outboundSchema: z.ZodType<
  PropertyUcCallTelephone$Outbound,
  z.ZodTypeDef,
  PropertyUcCallTelephone
> = z.object({
  telephone: z.string(),
  type: PropertyUcCallTelephoneType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyUcCallTelephone$ {
  /** @deprecated use `PropertyUcCallTelephone$inboundSchema` instead. */
  export const inboundSchema = PropertyUcCallTelephone$inboundSchema;
  /** @deprecated use `PropertyUcCallTelephone$outboundSchema` instead. */
  export const outboundSchema = PropertyUcCallTelephone$outboundSchema;
  /** @deprecated use `PropertyUcCallTelephone$Outbound` instead. */
  export type Outbound = PropertyUcCallTelephone$Outbound;
}

export function propertyUcCallTelephoneToJSON(
  propertyUcCallTelephone: PropertyUcCallTelephone,
): string {
  return JSON.stringify(
    PropertyUcCallTelephone$outboundSchema.parse(propertyUcCallTelephone),
  );
}

export function propertyUcCallTelephoneFromJSON(
  jsonString: string,
): SafeParseResult<PropertyUcCallTelephone, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PropertyUcCallTelephone$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertyUcCallTelephone' from JSON`,
  );
}
