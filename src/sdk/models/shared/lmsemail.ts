/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LmsEmail = {};

/** @internal */
export const LmsEmail$inboundSchema: z.ZodType<
  LmsEmail,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type LmsEmail$Outbound = {};

/** @internal */
export const LmsEmail$outboundSchema: z.ZodType<
  LmsEmail$Outbound,
  z.ZodTypeDef,
  LmsEmail
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LmsEmail$ {
  /** @deprecated use `LmsEmail$inboundSchema` instead. */
  export const inboundSchema = LmsEmail$inboundSchema;
  /** @deprecated use `LmsEmail$outboundSchema` instead. */
  export const outboundSchema = LmsEmail$outboundSchema;
  /** @deprecated use `LmsEmail$Outbound` instead. */
  export type Outbound = LmsEmail$Outbound;
}

export function lmsEmailToJSON(lmsEmail: LmsEmail): string {
  return JSON.stringify(LmsEmail$outboundSchema.parse(lmsEmail));
}

export function lmsEmailFromJSON(
  jsonString: string,
): SafeParseResult<LmsEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LmsEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LmsEmail' from JSON`,
  );
}
