/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const PropertyHrisEmployeeEmployeeRoles = {
  Admin: "ADMIN",
  Manager: "MANAGER",
  Recruiter: "RECRUITER",
  Salesrep: "SALESREP",
  Interviewer: "INTERVIEWER",
} as const;
export type PropertyHrisEmployeeEmployeeRoles = OpenEnum<
  typeof PropertyHrisEmployeeEmployeeRoles
>;

/** @internal */
export const PropertyHrisEmployeeEmployeeRoles$inboundSchema: z.ZodType<
  PropertyHrisEmployeeEmployeeRoles,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PropertyHrisEmployeeEmployeeRoles),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PropertyHrisEmployeeEmployeeRoles$outboundSchema: z.ZodType<
  PropertyHrisEmployeeEmployeeRoles,
  z.ZodTypeDef,
  PropertyHrisEmployeeEmployeeRoles
> = z.union([
  z.nativeEnum(PropertyHrisEmployeeEmployeeRoles),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyHrisEmployeeEmployeeRoles$ {
  /** @deprecated use `PropertyHrisEmployeeEmployeeRoles$inboundSchema` instead. */
  export const inboundSchema = PropertyHrisEmployeeEmployeeRoles$inboundSchema;
  /** @deprecated use `PropertyHrisEmployeeEmployeeRoles$outboundSchema` instead. */
  export const outboundSchema =
    PropertyHrisEmployeeEmployeeRoles$outboundSchema;
}
