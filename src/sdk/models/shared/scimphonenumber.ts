/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const ScimPhoneNumberType = {
  Work: "work",
  Home: "home",
  Other: "other",
  Mobile: "mobile",
  Fax: "fax",
  Pager: "pager",
} as const;
export type ScimPhoneNumberType = ClosedEnum<typeof ScimPhoneNumberType>;

export type ScimPhoneNumber = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: ScimPhoneNumberType | undefined;
  value?: string | undefined;
};

/** @internal */
export const ScimPhoneNumberType$inboundSchema: z.ZodNativeEnum<
  typeof ScimPhoneNumberType
> = z.nativeEnum(ScimPhoneNumberType);

/** @internal */
export const ScimPhoneNumberType$outboundSchema: z.ZodNativeEnum<
  typeof ScimPhoneNumberType
> = ScimPhoneNumberType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimPhoneNumberType$ {
  /** @deprecated use `ScimPhoneNumberType$inboundSchema` instead. */
  export const inboundSchema = ScimPhoneNumberType$inboundSchema;
  /** @deprecated use `ScimPhoneNumberType$outboundSchema` instead. */
  export const outboundSchema = ScimPhoneNumberType$outboundSchema;
}

/** @internal */
export const ScimPhoneNumber$inboundSchema: z.ZodType<
  ScimPhoneNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: ScimPhoneNumberType$inboundSchema.optional(),
  value: z.string().optional(),
});

/** @internal */
export type ScimPhoneNumber$Outbound = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: string | undefined;
  value?: string | undefined;
};

/** @internal */
export const ScimPhoneNumber$outboundSchema: z.ZodType<
  ScimPhoneNumber$Outbound,
  z.ZodTypeDef,
  ScimPhoneNumber
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: ScimPhoneNumberType$outboundSchema.optional(),
  value: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimPhoneNumber$ {
  /** @deprecated use `ScimPhoneNumber$inboundSchema` instead. */
  export const inboundSchema = ScimPhoneNumber$inboundSchema;
  /** @deprecated use `ScimPhoneNumber$outboundSchema` instead. */
  export const outboundSchema = ScimPhoneNumber$outboundSchema;
  /** @deprecated use `ScimPhoneNumber$Outbound` instead. */
  export type Outbound = ScimPhoneNumber$Outbound;
}
