/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const ScimAddressType = {
  Work: "work",
  Home: "home",
  Other: "other",
} as const;
export type ScimAddressType = ClosedEnum<typeof ScimAddressType>;

export type ScimAddress = {
  country?: string | undefined;
  formatted?: string | undefined;
  locality?: string | undefined;
  postalCode?: string | undefined;
  region?: string | undefined;
  streetAddress?: string | undefined;
  type?: ScimAddressType | undefined;
};

/** @internal */
export const ScimAddressType$inboundSchema: z.ZodNativeEnum<
  typeof ScimAddressType
> = z.nativeEnum(ScimAddressType);

/** @internal */
export const ScimAddressType$outboundSchema: z.ZodNativeEnum<
  typeof ScimAddressType
> = ScimAddressType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimAddressType$ {
  /** @deprecated use `ScimAddressType$inboundSchema` instead. */
  export const inboundSchema = ScimAddressType$inboundSchema;
  /** @deprecated use `ScimAddressType$outboundSchema` instead. */
  export const outboundSchema = ScimAddressType$outboundSchema;
}

/** @internal */
export const ScimAddress$inboundSchema: z.ZodType<
  ScimAddress,
  z.ZodTypeDef,
  unknown
> = z.object({
  country: z.string().optional(),
  formatted: z.string().optional(),
  locality: z.string().optional(),
  postalCode: z.string().optional(),
  region: z.string().optional(),
  streetAddress: z.string().optional(),
  type: ScimAddressType$inboundSchema.optional(),
});

/** @internal */
export type ScimAddress$Outbound = {
  country?: string | undefined;
  formatted?: string | undefined;
  locality?: string | undefined;
  postalCode?: string | undefined;
  region?: string | undefined;
  streetAddress?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const ScimAddress$outboundSchema: z.ZodType<
  ScimAddress$Outbound,
  z.ZodTypeDef,
  ScimAddress
> = z.object({
  country: z.string().optional(),
  formatted: z.string().optional(),
  locality: z.string().optional(),
  postalCode: z.string().optional(),
  region: z.string().optional(),
  streetAddress: z.string().optional(),
  type: ScimAddressType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimAddress$ {
  /** @deprecated use `ScimAddress$inboundSchema` instead. */
  export const inboundSchema = ScimAddress$inboundSchema;
  /** @deprecated use `ScimAddress$outboundSchema` instead. */
  export const outboundSchema = ScimAddress$outboundSchema;
  /** @deprecated use `ScimAddress$Outbound` instead. */
  export type Outbound = ScimAddress$Outbound;
}
