/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type CrmStage = {
  active?: boolean | undefined;
  createdAt?: Date | undefined;
  dealProbability?: number | undefined;
  displayOrder?: number | undefined;
  id?: string | undefined;
  name?: string | undefined;
  updatedAt?: Date | undefined;
};

/** @internal */
export const CrmStage$inboundSchema: z.ZodType<
  CrmStage,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean().optional(),
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  deal_probability: z.number().optional(),
  display_order: z.number().optional(),
  id: z.string().optional(),
  name: z.string().optional(),
  updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "deal_probability": "dealProbability",
    "display_order": "displayOrder",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type CrmStage$Outbound = {
  active?: boolean | undefined;
  created_at?: string | undefined;
  deal_probability?: number | undefined;
  display_order?: number | undefined;
  id?: string | undefined;
  name?: string | undefined;
  updated_at?: string | undefined;
};

/** @internal */
export const CrmStage$outboundSchema: z.ZodType<
  CrmStage$Outbound,
  z.ZodTypeDef,
  CrmStage
> = z.object({
  active: z.boolean().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  dealProbability: z.number().optional(),
  displayOrder: z.number().optional(),
  id: z.string().optional(),
  name: z.string().optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    dealProbability: "deal_probability",
    displayOrder: "display_order",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CrmStage$ {
  /** @deprecated use `CrmStage$inboundSchema` instead. */
  export const inboundSchema = CrmStage$inboundSchema;
  /** @deprecated use `CrmStage$outboundSchema` instead. */
  export const outboundSchema = CrmStage$outboundSchema;
  /** @deprecated use `CrmStage$Outbound` instead. */
  export type Outbound = CrmStage$Outbound;
}
