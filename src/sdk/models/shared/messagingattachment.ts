/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MessagingAttachment = {
  contentIdentifier?: string | undefined;
  contentType?: string | undefined;
  downloadUrl?: string | undefined;
  filename?: string | undefined;
  messageId?: string | undefined;
  size?: number | undefined;
};

/** @internal */
export const MessagingAttachment$inboundSchema: z.ZodType<
  MessagingAttachment,
  z.ZodTypeDef,
  unknown
> = z.object({
  content_identifier: z.string().optional(),
  content_type: z.string().optional(),
  download_url: z.string().optional(),
  filename: z.string().optional(),
  message_id: z.string().optional(),
  size: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "content_identifier": "contentIdentifier",
    "content_type": "contentType",
    "download_url": "downloadUrl",
    "message_id": "messageId",
  });
});

/** @internal */
export type MessagingAttachment$Outbound = {
  content_identifier?: string | undefined;
  content_type?: string | undefined;
  download_url?: string | undefined;
  filename?: string | undefined;
  message_id?: string | undefined;
  size?: number | undefined;
};

/** @internal */
export const MessagingAttachment$outboundSchema: z.ZodType<
  MessagingAttachment$Outbound,
  z.ZodTypeDef,
  MessagingAttachment
> = z.object({
  contentIdentifier: z.string().optional(),
  contentType: z.string().optional(),
  downloadUrl: z.string().optional(),
  filename: z.string().optional(),
  messageId: z.string().optional(),
  size: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    contentIdentifier: "content_identifier",
    contentType: "content_type",
    downloadUrl: "download_url",
    messageId: "message_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagingAttachment$ {
  /** @deprecated use `MessagingAttachment$inboundSchema` instead. */
  export const inboundSchema = MessagingAttachment$inboundSchema;
  /** @deprecated use `MessagingAttachment$outboundSchema` instead. */
  export const outboundSchema = MessagingAttachment$outboundSchema;
  /** @deprecated use `MessagingAttachment$Outbound` instead. */
  export type Outbound = MessagingAttachment$Outbound;
}

export function messagingAttachmentToJSON(
  messagingAttachment: MessagingAttachment,
): string {
  return JSON.stringify(
    MessagingAttachment$outboundSchema.parse(messagingAttachment),
  );
}

export function messagingAttachmentFromJSON(
  jsonString: string,
): SafeParseResult<MessagingAttachment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MessagingAttachment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MessagingAttachment' from JSON`,
  );
}
