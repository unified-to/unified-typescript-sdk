/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UcEmailType = {
  Work: "WORK",
  Home: "HOME",
  Other: "OTHER",
} as const;
export type UcEmailType = OpenEnum<typeof UcEmailType>;

export type UcEmail = {
  email: string;
  type?: UcEmailType | undefined;
};

/** @internal */
export const UcEmailType$inboundSchema: z.ZodType<
  UcEmailType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(UcEmailType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const UcEmailType$outboundSchema: z.ZodType<
  UcEmailType,
  z.ZodTypeDef,
  UcEmailType
> = z.union([
  z.nativeEnum(UcEmailType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UcEmailType$ {
  /** @deprecated use `UcEmailType$inboundSchema` instead. */
  export const inboundSchema = UcEmailType$inboundSchema;
  /** @deprecated use `UcEmailType$outboundSchema` instead. */
  export const outboundSchema = UcEmailType$outboundSchema;
}

/** @internal */
export const UcEmail$inboundSchema: z.ZodType<UcEmail, z.ZodTypeDef, unknown> =
  z.object({
    email: z.string(),
    type: UcEmailType$inboundSchema.optional(),
  });

/** @internal */
export type UcEmail$Outbound = {
  email: string;
  type?: string | undefined;
};

/** @internal */
export const UcEmail$outboundSchema: z.ZodType<
  UcEmail$Outbound,
  z.ZodTypeDef,
  UcEmail
> = z.object({
  email: z.string(),
  type: UcEmailType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UcEmail$ {
  /** @deprecated use `UcEmail$inboundSchema` instead. */
  export const inboundSchema = UcEmail$inboundSchema;
  /** @deprecated use `UcEmail$outboundSchema` instead. */
  export const outboundSchema = UcEmail$outboundSchema;
  /** @deprecated use `UcEmail$Outbound` instead. */
  export type Outbound = UcEmail$Outbound;
}

export function ucEmailToJSON(ucEmail: UcEmail): string {
  return JSON.stringify(UcEmail$outboundSchema.parse(ucEmail));
}

export function ucEmailFromJSON(
  jsonString: string,
): SafeParseResult<UcEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UcEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UcEmail' from JSON`,
  );
}
