/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const CommerceItemMediaType = {
    Image: "image",
    Video: "video",
} as const;
export type CommerceItemMediaType = ClosedEnum<typeof CommerceItemMediaType>;

export type CommerceItemMedia = {
    alt?: string | undefined;
    height?: number | undefined;
    id?: string | undefined;
    position?: number | undefined;
    type?: CommerceItemMediaType | undefined;
    url: string;
    width?: number | undefined;
};

/** @internal */
export const CommerceItemMediaType$inboundSchema: z.ZodNativeEnum<typeof CommerceItemMediaType> =
    z.nativeEnum(CommerceItemMediaType);

/** @internal */
export const CommerceItemMediaType$outboundSchema: z.ZodNativeEnum<typeof CommerceItemMediaType> =
    CommerceItemMediaType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceItemMediaType$ {
    /** @deprecated use `CommerceItemMediaType$inboundSchema` instead. */
    export const inboundSchema = CommerceItemMediaType$inboundSchema;
    /** @deprecated use `CommerceItemMediaType$outboundSchema` instead. */
    export const outboundSchema = CommerceItemMediaType$outboundSchema;
}

/** @internal */
export const CommerceItemMedia$inboundSchema: z.ZodType<CommerceItemMedia, z.ZodTypeDef, unknown> =
    z.object({
        alt: z.string().optional(),
        height: z.number().optional(),
        id: z.string().optional(),
        position: z.number().optional(),
        type: CommerceItemMediaType$inboundSchema.optional(),
        url: z.string(),
        width: z.number().optional(),
    });

/** @internal */
export type CommerceItemMedia$Outbound = {
    alt?: string | undefined;
    height?: number | undefined;
    id?: string | undefined;
    position?: number | undefined;
    type?: string | undefined;
    url: string;
    width?: number | undefined;
};

/** @internal */
export const CommerceItemMedia$outboundSchema: z.ZodType<
    CommerceItemMedia$Outbound,
    z.ZodTypeDef,
    CommerceItemMedia
> = z.object({
    alt: z.string().optional(),
    height: z.number().optional(),
    id: z.string().optional(),
    position: z.number().optional(),
    type: CommerceItemMediaType$outboundSchema.optional(),
    url: z.string(),
    width: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceItemMedia$ {
    /** @deprecated use `CommerceItemMedia$inboundSchema` instead. */
    export const inboundSchema = CommerceItemMedia$inboundSchema;
    /** @deprecated use `CommerceItemMedia$outboundSchema` instead. */
    export const outboundSchema = CommerceItemMedia$outboundSchema;
    /** @deprecated use `CommerceItemMedia$Outbound` instead. */
    export type Outbound = CommerceItemMedia$Outbound;
}
