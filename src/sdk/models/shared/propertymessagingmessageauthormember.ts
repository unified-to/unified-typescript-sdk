/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PropertyMessagingMessageAuthorMember = {
  email?: string | undefined;
  imageUrl?: string | undefined;
  name?: string | undefined;
  userId?: string | undefined;
};

/** @internal */
export const PropertyMessagingMessageAuthorMember$inboundSchema: z.ZodType<
  PropertyMessagingMessageAuthorMember,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().optional(),
  image_url: z.string().optional(),
  name: z.string().optional(),
  user_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
    "user_id": "userId",
  });
});

/** @internal */
export type PropertyMessagingMessageAuthorMember$Outbound = {
  email?: string | undefined;
  image_url?: string | undefined;
  name?: string | undefined;
  user_id?: string | undefined;
};

/** @internal */
export const PropertyMessagingMessageAuthorMember$outboundSchema: z.ZodType<
  PropertyMessagingMessageAuthorMember$Outbound,
  z.ZodTypeDef,
  PropertyMessagingMessageAuthorMember
> = z.object({
  email: z.string().optional(),
  imageUrl: z.string().optional(),
  name: z.string().optional(),
  userId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyMessagingMessageAuthorMember$ {
  /** @deprecated use `PropertyMessagingMessageAuthorMember$inboundSchema` instead. */
  export const inboundSchema =
    PropertyMessagingMessageAuthorMember$inboundSchema;
  /** @deprecated use `PropertyMessagingMessageAuthorMember$outboundSchema` instead. */
  export const outboundSchema =
    PropertyMessagingMessageAuthorMember$outboundSchema;
  /** @deprecated use `PropertyMessagingMessageAuthorMember$Outbound` instead. */
  export type Outbound = PropertyMessagingMessageAuthorMember$Outbound;
}

export function propertyMessagingMessageAuthorMemberToJSON(
  propertyMessagingMessageAuthorMember: PropertyMessagingMessageAuthorMember,
): string {
  return JSON.stringify(
    PropertyMessagingMessageAuthorMember$outboundSchema.parse(
      propertyMessagingMessageAuthorMember,
    ),
  );
}

export function propertyMessagingMessageAuthorMemberFromJSON(
  jsonString: string,
): SafeParseResult<PropertyMessagingMessageAuthorMember, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PropertyMessagingMessageAuthorMember$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PropertyMessagingMessageAuthorMember' from JSON`,
  );
}
