/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ScimRole = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: string | undefined;
  value: string;
};

/** @internal */
export const ScimRole$inboundSchema: z.ZodType<
  ScimRole,
  z.ZodTypeDef,
  unknown
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: z.string().optional(),
  value: z.string(),
});

/** @internal */
export type ScimRole$Outbound = {
  display?: string | undefined;
  primary?: boolean | undefined;
  type?: string | undefined;
  value: string;
};

/** @internal */
export const ScimRole$outboundSchema: z.ZodType<
  ScimRole$Outbound,
  z.ZodTypeDef,
  ScimRole
> = z.object({
  display: z.string().optional(),
  primary: z.boolean().optional(),
  type: z.string().optional(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ScimRole$ {
  /** @deprecated use `ScimRole$inboundSchema` instead. */
  export const inboundSchema = ScimRole$inboundSchema;
  /** @deprecated use `ScimRole$outboundSchema` instead. */
  export const outboundSchema = ScimRole$outboundSchema;
  /** @deprecated use `ScimRole$Outbound` instead. */
  export type Outbound = ScimRole$Outbound;
}
