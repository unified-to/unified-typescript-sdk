/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  AtsApplicationAnswer,
  AtsApplicationAnswer$inboundSchema,
  AtsApplicationAnswer$Outbound,
  AtsApplicationAnswer$outboundSchema,
} from "./atsapplicationanswer.js";
import {
  AtsOffer,
  AtsOffer$inboundSchema,
  AtsOffer$Outbound,
  AtsOffer$outboundSchema,
} from "./atsoffer.js";

export const AtsApplicationStatus = {
  New: "NEW",
  Reviewing: "REVIEWING",
  Screening: "SCREENING",
  Submitted: "SUBMITTED",
  FirstInterview: "FIRST_INTERVIEW",
  SecondInterview: "SECOND_INTERVIEW",
  ThirdInterview: "THIRD_INTERVIEW",
  BackgroundCheck: "BACKGROUND_CHECK",
  Offered: "OFFERED",
  Accepted: "ACCEPTED",
  Hired: "HIRED",
  Rejected: "REJECTED",
  Declined: "DECLINED",
  Withdrawn: "WITHDRAWN",
} as const;
export type AtsApplicationStatus = ClosedEnum<typeof AtsApplicationStatus>;

export type AtsApplication = {
  answers?: Array<AtsApplicationAnswer> | undefined;
  appliedAt?: Date | undefined;
  candidateId?: string | undefined;
  createdAt?: Date | undefined;
  hiredAt?: Date | undefined;
  id?: string | undefined;
  jobId?: string | undefined;
  offers?: Array<AtsOffer> | undefined;
  originalStatus?: string | undefined;
  raw?: { [k: string]: any } | undefined;
  rejectedAt?: Date | undefined;
  rejectedReason?: string | undefined;
  source?: string | undefined;
  status?: AtsApplicationStatus | undefined;
  updatedAt?: Date | undefined;
};

/** @internal */
export const AtsApplicationStatus$inboundSchema: z.ZodNativeEnum<
  typeof AtsApplicationStatus
> = z.nativeEnum(AtsApplicationStatus);

/** @internal */
export const AtsApplicationStatus$outboundSchema: z.ZodNativeEnum<
  typeof AtsApplicationStatus
> = AtsApplicationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsApplicationStatus$ {
  /** @deprecated use `AtsApplicationStatus$inboundSchema` instead. */
  export const inboundSchema = AtsApplicationStatus$inboundSchema;
  /** @deprecated use `AtsApplicationStatus$outboundSchema` instead. */
  export const outboundSchema = AtsApplicationStatus$outboundSchema;
}

/** @internal */
export const AtsApplication$inboundSchema: z.ZodType<
  AtsApplication,
  z.ZodTypeDef,
  unknown
> = z.object({
  answers: z.array(AtsApplicationAnswer$inboundSchema).optional(),
  applied_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  candidate_id: z.string().optional(),
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  hired_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  id: z.string().optional(),
  job_id: z.string().optional(),
  offers: z.array(AtsOffer$inboundSchema).optional(),
  original_status: z.string().optional(),
  raw: z.record(z.any()).optional(),
  rejected_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  rejected_reason: z.string().optional(),
  source: z.string().optional(),
  status: AtsApplicationStatus$inboundSchema.optional(),
  updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "applied_at": "appliedAt",
    "candidate_id": "candidateId",
    "created_at": "createdAt",
    "hired_at": "hiredAt",
    "job_id": "jobId",
    "original_status": "originalStatus",
    "rejected_at": "rejectedAt",
    "rejected_reason": "rejectedReason",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type AtsApplication$Outbound = {
  answers?: Array<AtsApplicationAnswer$Outbound> | undefined;
  applied_at?: string | undefined;
  candidate_id?: string | undefined;
  created_at?: string | undefined;
  hired_at?: string | undefined;
  id?: string | undefined;
  job_id?: string | undefined;
  offers?: Array<AtsOffer$Outbound> | undefined;
  original_status?: string | undefined;
  raw?: { [k: string]: any } | undefined;
  rejected_at?: string | undefined;
  rejected_reason?: string | undefined;
  source?: string | undefined;
  status?: string | undefined;
  updated_at?: string | undefined;
};

/** @internal */
export const AtsApplication$outboundSchema: z.ZodType<
  AtsApplication$Outbound,
  z.ZodTypeDef,
  AtsApplication
> = z.object({
  answers: z.array(AtsApplicationAnswer$outboundSchema).optional(),
  appliedAt: z.date().transform(v => v.toISOString()).optional(),
  candidateId: z.string().optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  hiredAt: z.date().transform(v => v.toISOString()).optional(),
  id: z.string().optional(),
  jobId: z.string().optional(),
  offers: z.array(AtsOffer$outboundSchema).optional(),
  originalStatus: z.string().optional(),
  raw: z.record(z.any()).optional(),
  rejectedAt: z.date().transform(v => v.toISOString()).optional(),
  rejectedReason: z.string().optional(),
  source: z.string().optional(),
  status: AtsApplicationStatus$outboundSchema.optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
  return remap$(v, {
    appliedAt: "applied_at",
    candidateId: "candidate_id",
    createdAt: "created_at",
    hiredAt: "hired_at",
    jobId: "job_id",
    originalStatus: "original_status",
    rejectedAt: "rejected_at",
    rejectedReason: "rejected_reason",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsApplication$ {
  /** @deprecated use `AtsApplication$inboundSchema` instead. */
  export const inboundSchema = AtsApplication$inboundSchema;
  /** @deprecated use `AtsApplication$outboundSchema` instead. */
  export const outboundSchema = AtsApplication$outboundSchema;
  /** @deprecated use `AtsApplication$Outbound` instead. */
  export type Outbound = AtsApplication$Outbound;
}
