/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type AccountingTaxrate = {
  createdAt?: Date | undefined;
  description?: string | undefined;
  id?: string | undefined;
  isActive?: boolean | undefined;
  name?: string | undefined;
  rate?: number | undefined;
  raw?: { [k: string]: any } | undefined;
  updatedAt?: Date | undefined;
};

/** @internal */
export const AccountingTaxrate$inboundSchema: z.ZodType<
  AccountingTaxrate,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  description: z.string().optional(),
  id: z.string().optional(),
  is_active: z.boolean().optional(),
  name: z.string().optional(),
  rate: z.number().optional(),
  raw: z.record(z.any()).optional(),
  updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "is_active": "isActive",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type AccountingTaxrate$Outbound = {
  created_at?: string | undefined;
  description?: string | undefined;
  id?: string | undefined;
  is_active?: boolean | undefined;
  name?: string | undefined;
  rate?: number | undefined;
  raw?: { [k: string]: any } | undefined;
  updated_at?: string | undefined;
};

/** @internal */
export const AccountingTaxrate$outboundSchema: z.ZodType<
  AccountingTaxrate$Outbound,
  z.ZodTypeDef,
  AccountingTaxrate
> = z.object({
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  description: z.string().optional(),
  id: z.string().optional(),
  isActive: z.boolean().optional(),
  name: z.string().optional(),
  rate: z.number().optional(),
  raw: z.record(z.any()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    isActive: "is_active",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingTaxrate$ {
  /** @deprecated use `AccountingTaxrate$inboundSchema` instead. */
  export const inboundSchema = AccountingTaxrate$inboundSchema;
  /** @deprecated use `AccountingTaxrate$outboundSchema` instead. */
  export const outboundSchema = AccountingTaxrate$outboundSchema;
  /** @deprecated use `AccountingTaxrate$Outbound` instead. */
  export type Outbound = AccountingTaxrate$Outbound;
}
