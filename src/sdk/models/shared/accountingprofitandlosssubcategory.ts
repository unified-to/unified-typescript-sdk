/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountingProfitAndLossSubcategory = {
  amount?: number | undefined;
  name?: string | undefined;
  transactionIds?: Array<string> | undefined;
};

/** @internal */
export const AccountingProfitAndLossSubcategory$inboundSchema: z.ZodType<
  AccountingProfitAndLossSubcategory,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().optional(),
  name: z.string().optional(),
  transaction_ids: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "transaction_ids": "transactionIds",
  });
});

/** @internal */
export type AccountingProfitAndLossSubcategory$Outbound = {
  amount?: number | undefined;
  name?: string | undefined;
  transaction_ids?: Array<string> | undefined;
};

/** @internal */
export const AccountingProfitAndLossSubcategory$outboundSchema: z.ZodType<
  AccountingProfitAndLossSubcategory$Outbound,
  z.ZodTypeDef,
  AccountingProfitAndLossSubcategory
> = z.object({
  amount: z.number().optional(),
  name: z.string().optional(),
  transactionIds: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    transactionIds: "transaction_ids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingProfitAndLossSubcategory$ {
  /** @deprecated use `AccountingProfitAndLossSubcategory$inboundSchema` instead. */
  export const inboundSchema = AccountingProfitAndLossSubcategory$inboundSchema;
  /** @deprecated use `AccountingProfitAndLossSubcategory$outboundSchema` instead. */
  export const outboundSchema =
    AccountingProfitAndLossSubcategory$outboundSchema;
  /** @deprecated use `AccountingProfitAndLossSubcategory$Outbound` instead. */
  export type Outbound = AccountingProfitAndLossSubcategory$Outbound;
}

export function accountingProfitAndLossSubcategoryToJSON(
  accountingProfitAndLossSubcategory: AccountingProfitAndLossSubcategory,
): string {
  return JSON.stringify(
    AccountingProfitAndLossSubcategory$outboundSchema.parse(
      accountingProfitAndLossSubcategory,
    ),
  );
}

export function accountingProfitAndLossSubcategoryFromJSON(
  jsonString: string,
): SafeParseResult<AccountingProfitAndLossSubcategory, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AccountingProfitAndLossSubcategory$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountingProfitAndLossSubcategory' from JSON`,
  );
}
