/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum PropertyCrmEventTaskStatus {
    Completed = "COMPLETED",
    NotStarted = "NOT_STARTED",
    WorkInProgress = "WORK_IN_PROGRESS",
    Deferred = "DEFERRED",
}

/**
 * The task object, when type = task
 */
export class PropertyCrmEventTask extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "due_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    dueAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: PropertyCrmEventTaskStatus;
}
