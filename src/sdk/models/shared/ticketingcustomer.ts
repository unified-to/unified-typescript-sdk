/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TicketingEmail } from "./ticketingemail";
import { TicketingTelephone } from "./ticketingtelephone";
import { Expose, Transform, Type } from "class-transformer";

export class TicketingCustomer extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata({ elemType: TicketingEmail })
    @Expose({ name: "emails" })
    @Type(() => TicketingEmail)
    emails?: TicketingEmail[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "tags" })
    tags?: string[];

    @SpeakeasyMetadata({ elemType: TicketingTelephone })
    @Expose({ name: "telephones" })
    @Type(() => TicketingTelephone)
    telephones?: TicketingTelephone[];

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
