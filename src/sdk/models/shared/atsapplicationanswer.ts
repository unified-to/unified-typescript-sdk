/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type AtsApplicationAnswer = {
    answers: Array<string>;
    questionId: string;
};

/** @internal */
export const AtsApplicationAnswer$inboundSchema: z.ZodType<
    AtsApplicationAnswer,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        answers: z.array(z.string()),
        question_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            question_id: "questionId",
        });
    });

/** @internal */
export type AtsApplicationAnswer$Outbound = {
    answers: Array<string>;
    question_id: string;
};

/** @internal */
export const AtsApplicationAnswer$outboundSchema: z.ZodType<
    AtsApplicationAnswer$Outbound,
    z.ZodTypeDef,
    AtsApplicationAnswer
> = z
    .object({
        answers: z.array(z.string()),
        questionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            questionId: "question_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsApplicationAnswer$ {
    /** @deprecated use `AtsApplicationAnswer$inboundSchema` instead. */
    export const inboundSchema = AtsApplicationAnswer$inboundSchema;
    /** @deprecated use `AtsApplicationAnswer$outboundSchema` instead. */
    export const outboundSchema = AtsApplicationAnswer$outboundSchema;
    /** @deprecated use `AtsApplicationAnswer$Outbound` instead. */
    export type Outbound = AtsApplicationAnswer$Outbound;
}
