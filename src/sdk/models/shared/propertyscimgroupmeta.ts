/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const ResourceType = {
  User: "User",
  Group: "Group",
} as const;
export type ResourceType = ClosedEnum<typeof ResourceType>;

export type PropertyScimGroupMeta = {
  created?: string | undefined;
  lastModified?: string | undefined;
  location?: string | undefined;
  resourceType?: ResourceType | undefined;
  version?: string | undefined;
};

/** @internal */
export const ResourceType$inboundSchema: z.ZodNativeEnum<typeof ResourceType> =
  z.nativeEnum(ResourceType);

/** @internal */
export const ResourceType$outboundSchema: z.ZodNativeEnum<typeof ResourceType> =
  ResourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResourceType$ {
  /** @deprecated use `ResourceType$inboundSchema` instead. */
  export const inboundSchema = ResourceType$inboundSchema;
  /** @deprecated use `ResourceType$outboundSchema` instead. */
  export const outboundSchema = ResourceType$outboundSchema;
}

/** @internal */
export const PropertyScimGroupMeta$inboundSchema: z.ZodType<
  PropertyScimGroupMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  created: z.string().optional(),
  lastModified: z.string().optional(),
  location: z.string().optional(),
  resourceType: ResourceType$inboundSchema.optional(),
  version: z.string().optional(),
});

/** @internal */
export type PropertyScimGroupMeta$Outbound = {
  created?: string | undefined;
  lastModified?: string | undefined;
  location?: string | undefined;
  resourceType?: string | undefined;
  version?: string | undefined;
};

/** @internal */
export const PropertyScimGroupMeta$outboundSchema: z.ZodType<
  PropertyScimGroupMeta$Outbound,
  z.ZodTypeDef,
  PropertyScimGroupMeta
> = z.object({
  created: z.string().optional(),
  lastModified: z.string().optional(),
  location: z.string().optional(),
  resourceType: ResourceType$outboundSchema.optional(),
  version: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyScimGroupMeta$ {
  /** @deprecated use `PropertyScimGroupMeta$inboundSchema` instead. */
  export const inboundSchema = PropertyScimGroupMeta$inboundSchema;
  /** @deprecated use `PropertyScimGroupMeta$outboundSchema` instead. */
  export const outboundSchema = PropertyScimGroupMeta$outboundSchema;
  /** @deprecated use `PropertyScimGroupMeta$Outbound` instead. */
  export type Outbound = PropertyScimGroupMeta$Outbound;
}
