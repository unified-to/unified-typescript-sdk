/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  GenaiContent,
  GenaiContent$inboundSchema,
  GenaiContent$Outbound,
  GenaiContent$outboundSchema,
} from "./genaicontent.js";

export type GenaiPrompt = {
  maxTokens?: number | undefined;
  messages?: Array<GenaiContent> | undefined;
  modelId?: string | undefined;
  raw?: { [k: string]: any } | undefined;
  responses?: Array<string> | undefined;
  temperature?: number | undefined;
};

/** @internal */
export const GenaiPrompt$inboundSchema: z.ZodType<
  GenaiPrompt,
  z.ZodTypeDef,
  unknown
> = z.object({
  max_tokens: z.number().optional(),
  messages: z.array(GenaiContent$inboundSchema).optional(),
  model_id: z.string().optional(),
  raw: z.record(z.any()).optional(),
  responses: z.array(z.string()).optional(),
  temperature: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "max_tokens": "maxTokens",
    "model_id": "modelId",
  });
});

/** @internal */
export type GenaiPrompt$Outbound = {
  max_tokens?: number | undefined;
  messages?: Array<GenaiContent$Outbound> | undefined;
  model_id?: string | undefined;
  raw?: { [k: string]: any } | undefined;
  responses?: Array<string> | undefined;
  temperature?: number | undefined;
};

/** @internal */
export const GenaiPrompt$outboundSchema: z.ZodType<
  GenaiPrompt$Outbound,
  z.ZodTypeDef,
  GenaiPrompt
> = z.object({
  maxTokens: z.number().optional(),
  messages: z.array(GenaiContent$outboundSchema).optional(),
  modelId: z.string().optional(),
  raw: z.record(z.any()).optional(),
  responses: z.array(z.string()).optional(),
  temperature: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    maxTokens: "max_tokens",
    modelId: "model_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenaiPrompt$ {
  /** @deprecated use `GenaiPrompt$inboundSchema` instead. */
  export const inboundSchema = GenaiPrompt$inboundSchema;
  /** @deprecated use `GenaiPrompt$outboundSchema` instead. */
  export const outboundSchema = GenaiPrompt$outboundSchema;
  /** @deprecated use `GenaiPrompt$Outbound` instead. */
  export type Outbound = GenaiPrompt$Outbound;
}
