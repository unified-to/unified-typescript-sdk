/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const HrisPayslipDetailType = {
  EarningSalary: "EARNING_SALARY",
  EarningOvertime: "EARNING_OVERTIME",
  EarningTip: "EARNING_TIP",
  EarningBonus: "EARNING_BONUS",
  EarningCommission: "EARNING_COMMISSION",
  EarningAdjustment: "EARNING_ADJUSTMENT",
  Earning: "EARNING",
  PretaxDeduction: "PRETAX_DEDUCTION",
  PretaxDeductionHealthInsurance: "PRETAX_DEDUCTION_HEALTH_INSURANCE",
  PretaxDeductionRetirement: "PRETAX_DEDUCTION_RETIREMENT",
  PretaxDeductionHra: "PRETAX_DEDUCTION_HRA",
  TaxFederal: "TAX_FEDERAL",
  TaxRegion: "TAX_REGION",
  TaxLocal: "TAX_LOCAL",
  PosttaxBenefit: "POSTTAX_BENEFIT",
  PosttaxGarnishment: "POSTTAX_GARNISHMENT",
  Reimbursement: "REIMBURSEMENT",
} as const;
export type HrisPayslipDetailType = ClosedEnum<typeof HrisPayslipDetailType>;

export type HrisPayslipDetail = {
  amount: number;
  companyAmount?: number | undefined;
  description?: string | undefined;
  employeeAmount?: number | undefined;
  name?: string | undefined;
  type?: HrisPayslipDetailType | undefined;
};

/** @internal */
export const HrisPayslipDetailType$inboundSchema: z.ZodNativeEnum<
  typeof HrisPayslipDetailType
> = z.nativeEnum(HrisPayslipDetailType);

/** @internal */
export const HrisPayslipDetailType$outboundSchema: z.ZodNativeEnum<
  typeof HrisPayslipDetailType
> = HrisPayslipDetailType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisPayslipDetailType$ {
  /** @deprecated use `HrisPayslipDetailType$inboundSchema` instead. */
  export const inboundSchema = HrisPayslipDetailType$inboundSchema;
  /** @deprecated use `HrisPayslipDetailType$outboundSchema` instead. */
  export const outboundSchema = HrisPayslipDetailType$outboundSchema;
}

/** @internal */
export const HrisPayslipDetail$inboundSchema: z.ZodType<
  HrisPayslipDetail,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number(),
  company_amount: z.number().optional(),
  description: z.string().optional(),
  employee_amount: z.number().optional(),
  name: z.string().optional(),
  type: HrisPayslipDetailType$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "company_amount": "companyAmount",
    "employee_amount": "employeeAmount",
  });
});

/** @internal */
export type HrisPayslipDetail$Outbound = {
  amount: number;
  company_amount?: number | undefined;
  description?: string | undefined;
  employee_amount?: number | undefined;
  name?: string | undefined;
  type?: string | undefined;
};

/** @internal */
export const HrisPayslipDetail$outboundSchema: z.ZodType<
  HrisPayslipDetail$Outbound,
  z.ZodTypeDef,
  HrisPayslipDetail
> = z.object({
  amount: z.number(),
  companyAmount: z.number().optional(),
  description: z.string().optional(),
  employeeAmount: z.number().optional(),
  name: z.string().optional(),
  type: HrisPayslipDetailType$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    companyAmount: "company_amount",
    employeeAmount: "employee_amount",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HrisPayslipDetail$ {
  /** @deprecated use `HrisPayslipDetail$inboundSchema` instead. */
  export const inboundSchema = HrisPayslipDetail$inboundSchema;
  /** @deprecated use `HrisPayslipDetail$outboundSchema` instead. */
  export const outboundSchema = HrisPayslipDetail$outboundSchema;
  /** @deprecated use `HrisPayslipDetail$Outbound` instead. */
  export type Outbound = HrisPayslipDetail$Outbound;
}

export function hrisPayslipDetailToJSON(
  hrisPayslipDetail: HrisPayslipDetail,
): string {
  return JSON.stringify(
    HrisPayslipDetail$outboundSchema.parse(hrisPayslipDetail),
  );
}

export function hrisPayslipDetailFromJSON(
  jsonString: string,
): SafeParseResult<HrisPayslipDetail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HrisPayslipDetail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HrisPayslipDetail' from JSON`,
  );
}
