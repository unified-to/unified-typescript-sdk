/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountingContactPaymentMethod } from "./accountingcontactpaymentmethod";
import { AccountingEmail } from "./accountingemail";
import { AccountingTelephone } from "./accountingtelephone";
import { PropertyAccountingContactBillingAddress } from "./propertyaccountingcontactbillingaddress";
import { PropertyAccountingContactShippingAddress } from "./propertyaccountingcontactshippingaddress";
import { Expose, Transform, Type } from "class-transformer";

export enum TaxExemption {
    FederalGov = "FEDERAL_GOV",
    RegionGov = "REGION_GOV",
    LocalGov = "LOCAL_GOV",
    TribalGov = "TRIBAL_GOV",
    CharitableOrg = "CHARITABLE_ORG",
    ReligiousOrg = "RELIGIOUS_ORG",
    EducationalOrg = "EDUCATIONAL_ORG",
    MedicalOrg = "MEDICAL_ORG",
    Resale = "RESALE",
    Foreign = "FOREIGN",
    Other = "OTHER",
}

export class AccountingContact extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "billing_address" })
    @Type(() => PropertyAccountingContactBillingAddress)
    billingAddress?: PropertyAccountingContactBillingAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "company_name" })
    companyName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency?: string;

    @SpeakeasyMetadata({ elemType: AccountingEmail })
    @Expose({ name: "emails" })
    @Type(() => AccountingEmail)
    emails?: AccountingEmail[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "identification" })
    identification?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_customer" })
    isCustomer?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "is_supplier" })
    isSupplier?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata({ elemType: AccountingContactPaymentMethod })
    @Expose({ name: "payment_methods" })
    @Type(() => AccountingContactPaymentMethod)
    paymentMethods?: AccountingContactPaymentMethod[];

    @SpeakeasyMetadata()
    @Expose({ name: "portal_url" })
    portalUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "shipping_address" })
    @Type(() => PropertyAccountingContactShippingAddress)
    shippingAddress?: PropertyAccountingContactShippingAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "tax_exemption" })
    taxExemption?: TaxExemption;

    @SpeakeasyMetadata()
    @Expose({ name: "tax_number" })
    taxNumber?: string;

    @SpeakeasyMetadata({ elemType: AccountingTelephone })
    @Expose({ name: "telephones" })
    @Type(() => AccountingTelephone)
    telephones?: AccountingTelephone[];

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
