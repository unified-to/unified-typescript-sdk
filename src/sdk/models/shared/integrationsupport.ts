/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyIntegrationSupportWebhookEvents } from "./propertyintegrationsupportwebhookevents";
import { Expose, Type } from "class-transformer";

export enum FromWebhook {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListAccountId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListApplicationId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListCandidateId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListChannelId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListCollectionId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListCompanyId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListContactId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListCustomerId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListDealId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListInterviewId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListInvoiceId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListItemId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListJobId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListLimit {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListLinkId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListListId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListLocationId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListOffset {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListOrder {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListParentId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListQuery {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListSortByCreatedAt {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListSortByName {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListSortByUpdatedAt {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListSpaceId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListTicketId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListType {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListUpdatedGte {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum ListUserId {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum SearchDomain {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum SearchEmail {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum SearchLinkedinurl {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum SearchName {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export enum SearchTwitter {
    SupportedRequired = "supported-required",
    Supported = "supported",
    NotSupported = "not-supported",
}

export class IntegrationSupport extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "from_webhook" })
    fromWebhook?: FromWebhook;

    @SpeakeasyMetadata()
    @Expose({ name: "inbound_fields" })
    inboundFields?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "list_account_id" })
    listAccountId?: ListAccountId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_application_id" })
    listApplicationId?: ListApplicationId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_candidate_id" })
    listCandidateId?: ListCandidateId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_channel_id" })
    listChannelId?: ListChannelId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_collection_id" })
    listCollectionId?: ListCollectionId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_company_id" })
    listCompanyId?: ListCompanyId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_contact_id" })
    listContactId?: ListContactId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_customer_id" })
    listCustomerId?: ListCustomerId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_deal_id" })
    listDealId?: ListDealId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_interview_id" })
    listInterviewId?: ListInterviewId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_invoice_id" })
    listInvoiceId?: ListInvoiceId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_item_id" })
    listItemId?: ListItemId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_job_id" })
    listJobId?: ListJobId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_limit" })
    listLimit?: ListLimit;

    @SpeakeasyMetadata()
    @Expose({ name: "list_link_id" })
    listLinkId?: ListLinkId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_list_id" })
    listListId?: ListListId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_location_id" })
    listLocationId?: ListLocationId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_offset" })
    listOffset?: ListOffset;

    @SpeakeasyMetadata()
    @Expose({ name: "list_order" })
    listOrder?: ListOrder;

    @SpeakeasyMetadata()
    @Expose({ name: "list_parent_id" })
    listParentId?: ListParentId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_query" })
    listQuery?: ListQuery;

    @SpeakeasyMetadata()
    @Expose({ name: "list_sort_by_created_at" })
    listSortByCreatedAt?: ListSortByCreatedAt;

    @SpeakeasyMetadata()
    @Expose({ name: "list_sort_by_name" })
    listSortByName?: ListSortByName;

    @SpeakeasyMetadata()
    @Expose({ name: "list_sort_by_updated_at" })
    listSortByUpdatedAt?: ListSortByUpdatedAt;

    @SpeakeasyMetadata()
    @Expose({ name: "list_space_id" })
    listSpaceId?: ListSpaceId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_ticket_id" })
    listTicketId?: ListTicketId;

    @SpeakeasyMetadata()
    @Expose({ name: "list_type" })
    listType?: ListType;

    @SpeakeasyMetadata()
    @Expose({ name: "list_updated_gte" })
    listUpdatedGte?: ListUpdatedGte;

    @SpeakeasyMetadata()
    @Expose({ name: "list_user_id" })
    listUserId?: ListUserId;

    @SpeakeasyMetadata()
    @Expose({ name: "methods" })
    methods?: Record<string, boolean>;

    @SpeakeasyMetadata()
    @Expose({ name: "outbound_fields" })
    outboundFields?: Record<string, any>;

    /**
     * objects that we map from in the integration
     */
    @SpeakeasyMetadata()
    @Expose({ name: "raw_objects" })
    rawObjects?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "search_domain" })
    searchDomain?: SearchDomain;

    @SpeakeasyMetadata()
    @Expose({ name: "search_email" })
    searchEmail?: SearchEmail;

    @SpeakeasyMetadata()
    @Expose({ name: "search_linkedinurl" })
    searchLinkedinurl?: SearchLinkedinurl;

    @SpeakeasyMetadata()
    @Expose({ name: "search_name" })
    searchName?: SearchName;

    @SpeakeasyMetadata()
    @Expose({ name: "search_twitter" })
    searchTwitter?: SearchTwitter;

    @SpeakeasyMetadata()
    @Expose({ name: "webhook_events" })
    @Type(() => PropertyIntegrationSupportWebhookEvents)
    webhookEvents?: PropertyIntegrationSupportWebhookEvents;
}
