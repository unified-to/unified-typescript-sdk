/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CrmEmail } from "./crmemail";
import { CrmTelephone } from "./crmtelephone";
import { PropertyCrmContactAddress } from "./propertycrmcontactaddress";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A contact represents a person that optionally is associated with a deal and/or a company
 */
export class CrmContact extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    @Type(() => PropertyCrmContactAddress)
    address?: PropertyCrmContactAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "company" })
    company?: string;

    /**
     * An array of company IDs associated with this contact
     */
    @SpeakeasyMetadata()
    @Expose({ name: "company_ids" })
    companyIds?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * An array of deal IDs associated with this contact
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deal_ids" })
    dealIds?: string[];

    /**
     * An array of email addresses for this contact
     */
    @SpeakeasyMetadata({ elemType: CrmEmail })
    @Expose({ name: "emails" })
    @Type(() => CrmEmail)
    emails?: CrmEmail[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The raw data returned by the integration for this contact
     */
    @SpeakeasyMetadata()
    @Expose({ name: "raw" })
    raw?: Record<string, any>;

    /**
     * An array of telephones for this contact
     */
    @SpeakeasyMetadata({ elemType: CrmTelephone })
    @Expose({ name: "telephones" })
    @Type(() => CrmTelephone)
    telephones?: CrmTelephone[];

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId?: string;
}
