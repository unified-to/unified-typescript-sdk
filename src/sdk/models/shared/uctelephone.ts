/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UcTelephoneType = {
  Work: "WORK",
  Home: "HOME",
  Other: "OTHER",
  Fax: "FAX",
  Mobile: "MOBILE",
} as const;
export type UcTelephoneType = OpenEnum<typeof UcTelephoneType>;

export type UcTelephone = {
  telephone: string;
  type?: UcTelephoneType | undefined;
};

/** @internal */
export const UcTelephoneType$inboundSchema: z.ZodType<
  UcTelephoneType,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(UcTelephoneType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const UcTelephoneType$outboundSchema: z.ZodType<
  UcTelephoneType,
  z.ZodTypeDef,
  UcTelephoneType
> = z.union([
  z.nativeEnum(UcTelephoneType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UcTelephoneType$ {
  /** @deprecated use `UcTelephoneType$inboundSchema` instead. */
  export const inboundSchema = UcTelephoneType$inboundSchema;
  /** @deprecated use `UcTelephoneType$outboundSchema` instead. */
  export const outboundSchema = UcTelephoneType$outboundSchema;
}

/** @internal */
export const UcTelephone$inboundSchema: z.ZodType<
  UcTelephone,
  z.ZodTypeDef,
  unknown
> = z.object({
  telephone: z.string(),
  type: UcTelephoneType$inboundSchema.optional(),
});

/** @internal */
export type UcTelephone$Outbound = {
  telephone: string;
  type?: string | undefined;
};

/** @internal */
export const UcTelephone$outboundSchema: z.ZodType<
  UcTelephone$Outbound,
  z.ZodTypeDef,
  UcTelephone
> = z.object({
  telephone: z.string(),
  type: UcTelephoneType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UcTelephone$ {
  /** @deprecated use `UcTelephone$inboundSchema` instead. */
  export const inboundSchema = UcTelephone$inboundSchema;
  /** @deprecated use `UcTelephone$outboundSchema` instead. */
  export const outboundSchema = UcTelephone$outboundSchema;
  /** @deprecated use `UcTelephone$Outbound` instead. */
  export type Outbound = UcTelephone$Outbound;
}

export function ucTelephoneToJSON(ucTelephone: UcTelephone): string {
  return JSON.stringify(UcTelephone$outboundSchema.parse(ucTelephone));
}

export function ucTelephoneFromJSON(
  jsonString: string,
): SafeParseResult<UcTelephone, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UcTelephone$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UcTelephone' from JSON`,
  );
}
