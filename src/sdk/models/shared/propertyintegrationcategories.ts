/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

export const PropertyIntegrationCategories = {
  Passthrough: "passthrough",
  Hris: "hris",
  Ats: "ats",
  Auth: "auth",
  Crm: "crm",
  Enrich: "enrich",
  Martech: "martech",
  Ticketing: "ticketing",
  Uc: "uc",
  Accounting: "accounting",
  Storage: "storage",
  Commerce: "commerce",
  Payment: "payment",
  Genai: "genai",
  Messaging: "messaging",
  Kms: "kms",
  Task: "task",
  Scim: "scim",
  Lms: "lms",
  Repo: "repo",
  Metadata: "metadata",
  Calendar: "calendar",
  Verification: "verification",
} as const;
export type PropertyIntegrationCategories = OpenEnum<
  typeof PropertyIntegrationCategories
>;

/** @internal */
export const PropertyIntegrationCategories$inboundSchema: z.ZodType<
  PropertyIntegrationCategories,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(PropertyIntegrationCategories),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const PropertyIntegrationCategories$outboundSchema: z.ZodType<
  PropertyIntegrationCategories,
  z.ZodTypeDef,
  PropertyIntegrationCategories
> = z.union([
  z.nativeEnum(PropertyIntegrationCategories),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PropertyIntegrationCategories$ {
  /** @deprecated use `PropertyIntegrationCategories$inboundSchema` instead. */
  export const inboundSchema = PropertyIntegrationCategories$inboundSchema;
  /** @deprecated use `PropertyIntegrationCategories$outboundSchema` instead. */
  export const outboundSchema = PropertyIntegrationCategories$outboundSchema;
}
