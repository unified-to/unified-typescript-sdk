/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Frequency = {
    OneTime: "ONE_TIME",
    Day: "DAY",
    Quarter: "QUARTER",
    Year: "YEAR",
    Hour: "HOUR",
    Month: "MONTH",
    Week: "WEEK",
} as const;
export type Frequency = ClosedEnum<typeof Frequency>;

export const AtsCompensationType = {
    Salary: "SALARY",
    Bonus: "BONUS",
    StockOptions: "STOCK_OPTIONS",
    Equity: "EQUITY",
    Other: "OTHER",
} as const;
export type AtsCompensationType = ClosedEnum<typeof AtsCompensationType>;

export type AtsCompensation = {
    currency?: string | undefined;
    frequency?: Frequency | undefined;
    max?: number | undefined;
    min?: number | undefined;
    type?: AtsCompensationType | undefined;
};

/** @internal */
export const Frequency$inboundSchema: z.ZodNativeEnum<typeof Frequency> = z.nativeEnum(Frequency);

/** @internal */
export const Frequency$outboundSchema: z.ZodNativeEnum<typeof Frequency> = Frequency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Frequency$ {
    /** @deprecated use `Frequency$inboundSchema` instead. */
    export const inboundSchema = Frequency$inboundSchema;
    /** @deprecated use `Frequency$outboundSchema` instead. */
    export const outboundSchema = Frequency$outboundSchema;
}

/** @internal */
export const AtsCompensationType$inboundSchema: z.ZodNativeEnum<typeof AtsCompensationType> =
    z.nativeEnum(AtsCompensationType);

/** @internal */
export const AtsCompensationType$outboundSchema: z.ZodNativeEnum<typeof AtsCompensationType> =
    AtsCompensationType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCompensationType$ {
    /** @deprecated use `AtsCompensationType$inboundSchema` instead. */
    export const inboundSchema = AtsCompensationType$inboundSchema;
    /** @deprecated use `AtsCompensationType$outboundSchema` instead. */
    export const outboundSchema = AtsCompensationType$outboundSchema;
}

/** @internal */
export const AtsCompensation$inboundSchema: z.ZodType<AtsCompensation, z.ZodTypeDef, unknown> =
    z.object({
        currency: z.string().optional(),
        frequency: Frequency$inboundSchema.optional(),
        max: z.number().optional(),
        min: z.number().optional(),
        type: AtsCompensationType$inboundSchema.optional(),
    });

/** @internal */
export type AtsCompensation$Outbound = {
    currency?: string | undefined;
    frequency?: string | undefined;
    max?: number | undefined;
    min?: number | undefined;
    type?: string | undefined;
};

/** @internal */
export const AtsCompensation$outboundSchema: z.ZodType<
    AtsCompensation$Outbound,
    z.ZodTypeDef,
    AtsCompensation
> = z.object({
    currency: z.string().optional(),
    frequency: Frequency$outboundSchema.optional(),
    max: z.number().optional(),
    min: z.number().optional(),
    type: AtsCompensationType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtsCompensation$ {
    /** @deprecated use `AtsCompensation$inboundSchema` instead. */
    export const inboundSchema = AtsCompensation$inboundSchema;
    /** @deprecated use `AtsCompensation$outboundSchema` instead. */
    export const outboundSchema = AtsCompensation$outboundSchema;
    /** @deprecated use `AtsCompensation$Outbound` instead. */
    export type Outbound = AtsCompensation$Outbound;
}
