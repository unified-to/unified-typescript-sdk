/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  CommerceItemMedia,
  CommerceItemMedia$inboundSchema,
  CommerceItemMedia$Outbound,
  CommerceItemMedia$outboundSchema,
} from "./commerceitemmedia.js";
import {
  CommerceItemOption,
  CommerceItemOption$inboundSchema,
  CommerceItemOption$Outbound,
  CommerceItemOption$outboundSchema,
} from "./commerceitemoption.js";
import {
  CommerceItemPrice,
  CommerceItemPrice$inboundSchema,
  CommerceItemPrice$Outbound,
  CommerceItemPrice$outboundSchema,
} from "./commerceitemprice.js";
import {
  CommerceMetadata,
  CommerceMetadata$inboundSchema,
  CommerceMetadata$Outbound,
  CommerceMetadata$outboundSchema,
} from "./commercemetadata.js";

export const SizeUnit = {
  Cm: "cm",
  Inch: "inch",
} as const;
export type SizeUnit = ClosedEnum<typeof SizeUnit>;

export const WeightUnit = {
  G: "g",
  Kg: "kg",
  Oz: "oz",
  Lb: "lb",
} as const;
export type WeightUnit = ClosedEnum<typeof WeightUnit>;

export type CommerceItemVariant = {
  availableAt?: Date | undefined;
  description?: string | undefined;
  height?: number | undefined;
  id?: string | undefined;
  inventoryId?: string | undefined;
  isActive?: boolean | undefined;
  isFeatured?: boolean | undefined;
  isVisible?: boolean | undefined;
  length?: number | undefined;
  media?: Array<CommerceItemMedia> | undefined;
  metadata?: Array<CommerceMetadata> | undefined;
  name?: string | undefined;
  options?: Array<CommerceItemOption> | undefined;
  prices?: Array<CommerceItemPrice> | undefined;
  publicDescription?: string | undefined;
  publicName?: string | undefined;
  requiresShipping?: boolean | undefined;
  sizeUnit?: SizeUnit | undefined;
  sku?: string | undefined;
  tags?: Array<string> | undefined;
  totalStock?: number | undefined;
  weight?: number | undefined;
  weightUnit?: WeightUnit | undefined;
  width?: number | undefined;
};

/** @internal */
export const SizeUnit$inboundSchema: z.ZodNativeEnum<typeof SizeUnit> = z
  .nativeEnum(SizeUnit);

/** @internal */
export const SizeUnit$outboundSchema: z.ZodNativeEnum<typeof SizeUnit> =
  SizeUnit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SizeUnit$ {
  /** @deprecated use `SizeUnit$inboundSchema` instead. */
  export const inboundSchema = SizeUnit$inboundSchema;
  /** @deprecated use `SizeUnit$outboundSchema` instead. */
  export const outboundSchema = SizeUnit$outboundSchema;
}

/** @internal */
export const WeightUnit$inboundSchema: z.ZodNativeEnum<typeof WeightUnit> = z
  .nativeEnum(WeightUnit);

/** @internal */
export const WeightUnit$outboundSchema: z.ZodNativeEnum<typeof WeightUnit> =
  WeightUnit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WeightUnit$ {
  /** @deprecated use `WeightUnit$inboundSchema` instead. */
  export const inboundSchema = WeightUnit$inboundSchema;
  /** @deprecated use `WeightUnit$outboundSchema` instead. */
  export const outboundSchema = WeightUnit$outboundSchema;
}

/** @internal */
export const CommerceItemVariant$inboundSchema: z.ZodType<
  CommerceItemVariant,
  z.ZodTypeDef,
  unknown
> = z.object({
  available_at: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  description: z.string().optional(),
  height: z.number().optional(),
  id: z.string().optional(),
  inventory_id: z.string().optional(),
  is_active: z.boolean().optional(),
  is_featured: z.boolean().optional(),
  is_visible: z.boolean().optional(),
  length: z.number().optional(),
  media: z.array(CommerceItemMedia$inboundSchema).optional(),
  metadata: z.array(CommerceMetadata$inboundSchema).optional(),
  name: z.string().optional(),
  options: z.array(CommerceItemOption$inboundSchema).optional(),
  prices: z.array(CommerceItemPrice$inboundSchema).optional(),
  public_description: z.string().optional(),
  public_name: z.string().optional(),
  requires_shipping: z.boolean().optional(),
  size_unit: SizeUnit$inboundSchema.optional(),
  sku: z.string().optional(),
  tags: z.array(z.string()).optional(),
  total_stock: z.number().optional(),
  weight: z.number().optional(),
  weight_unit: WeightUnit$inboundSchema.optional(),
  width: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "available_at": "availableAt",
    "inventory_id": "inventoryId",
    "is_active": "isActive",
    "is_featured": "isFeatured",
    "is_visible": "isVisible",
    "public_description": "publicDescription",
    "public_name": "publicName",
    "requires_shipping": "requiresShipping",
    "size_unit": "sizeUnit",
    "total_stock": "totalStock",
    "weight_unit": "weightUnit",
  });
});

/** @internal */
export type CommerceItemVariant$Outbound = {
  available_at?: string | undefined;
  description?: string | undefined;
  height?: number | undefined;
  id?: string | undefined;
  inventory_id?: string | undefined;
  is_active?: boolean | undefined;
  is_featured?: boolean | undefined;
  is_visible?: boolean | undefined;
  length?: number | undefined;
  media?: Array<CommerceItemMedia$Outbound> | undefined;
  metadata?: Array<CommerceMetadata$Outbound> | undefined;
  name?: string | undefined;
  options?: Array<CommerceItemOption$Outbound> | undefined;
  prices?: Array<CommerceItemPrice$Outbound> | undefined;
  public_description?: string | undefined;
  public_name?: string | undefined;
  requires_shipping?: boolean | undefined;
  size_unit?: string | undefined;
  sku?: string | undefined;
  tags?: Array<string> | undefined;
  total_stock?: number | undefined;
  weight?: number | undefined;
  weight_unit?: string | undefined;
  width?: number | undefined;
};

/** @internal */
export const CommerceItemVariant$outboundSchema: z.ZodType<
  CommerceItemVariant$Outbound,
  z.ZodTypeDef,
  CommerceItemVariant
> = z.object({
  availableAt: z.date().transform(v => v.toISOString()).optional(),
  description: z.string().optional(),
  height: z.number().optional(),
  id: z.string().optional(),
  inventoryId: z.string().optional(),
  isActive: z.boolean().optional(),
  isFeatured: z.boolean().optional(),
  isVisible: z.boolean().optional(),
  length: z.number().optional(),
  media: z.array(CommerceItemMedia$outboundSchema).optional(),
  metadata: z.array(CommerceMetadata$outboundSchema).optional(),
  name: z.string().optional(),
  options: z.array(CommerceItemOption$outboundSchema).optional(),
  prices: z.array(CommerceItemPrice$outboundSchema).optional(),
  publicDescription: z.string().optional(),
  publicName: z.string().optional(),
  requiresShipping: z.boolean().optional(),
  sizeUnit: SizeUnit$outboundSchema.optional(),
  sku: z.string().optional(),
  tags: z.array(z.string()).optional(),
  totalStock: z.number().optional(),
  weight: z.number().optional(),
  weightUnit: WeightUnit$outboundSchema.optional(),
  width: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    availableAt: "available_at",
    inventoryId: "inventory_id",
    isActive: "is_active",
    isFeatured: "is_featured",
    isVisible: "is_visible",
    publicDescription: "public_description",
    publicName: "public_name",
    requiresShipping: "requires_shipping",
    sizeUnit: "size_unit",
    totalStock: "total_stock",
    weightUnit: "weight_unit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommerceItemVariant$ {
  /** @deprecated use `CommerceItemVariant$inboundSchema` instead. */
  export const inboundSchema = CommerceItemVariant$inboundSchema;
  /** @deprecated use `CommerceItemVariant$outboundSchema` instead. */
  export const outboundSchema = CommerceItemVariant$outboundSchema;
  /** @deprecated use `CommerceItemVariant$Outbound` instead. */
  export type Outbound = CommerceItemVariant$Outbound;
}
