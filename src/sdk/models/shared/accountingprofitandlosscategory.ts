/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountingProfitAndLossSubcategory,
  AccountingProfitAndLossSubcategory$inboundSchema,
  AccountingProfitAndLossSubcategory$Outbound,
  AccountingProfitAndLossSubcategory$outboundSchema,
} from "./accountingprofitandlosssubcategory.js";

/**
 * @deprecated
 */
export type AccountingProfitAndLossCategory = {
  amount?: number | undefined;
  name?: string | undefined;
  subItems?: Array<AccountingProfitAndLossSubcategory> | undefined;
};

/** @internal */
export const AccountingProfitAndLossCategory$inboundSchema: z.ZodType<
  AccountingProfitAndLossCategory,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().optional(),
  name: z.string().optional(),
  sub_items: z.array(AccountingProfitAndLossSubcategory$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "sub_items": "subItems",
  });
});

/** @internal */
export type AccountingProfitAndLossCategory$Outbound = {
  amount?: number | undefined;
  name?: string | undefined;
  sub_items?: Array<AccountingProfitAndLossSubcategory$Outbound> | undefined;
};

/** @internal */
export const AccountingProfitAndLossCategory$outboundSchema: z.ZodType<
  AccountingProfitAndLossCategory$Outbound,
  z.ZodTypeDef,
  AccountingProfitAndLossCategory
> = z.object({
  amount: z.number().optional(),
  name: z.string().optional(),
  subItems: z.array(AccountingProfitAndLossSubcategory$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    subItems: "sub_items",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountingProfitAndLossCategory$ {
  /** @deprecated use `AccountingProfitAndLossCategory$inboundSchema` instead. */
  export const inboundSchema = AccountingProfitAndLossCategory$inboundSchema;
  /** @deprecated use `AccountingProfitAndLossCategory$outboundSchema` instead. */
  export const outboundSchema = AccountingProfitAndLossCategory$outboundSchema;
  /** @deprecated use `AccountingProfitAndLossCategory$Outbound` instead. */
  export type Outbound = AccountingProfitAndLossCategory$Outbound;
}

export function accountingProfitAndLossCategoryToJSON(
  accountingProfitAndLossCategory: AccountingProfitAndLossCategory,
): string {
  return JSON.stringify(
    AccountingProfitAndLossCategory$outboundSchema.parse(
      accountingProfitAndLossCategory,
    ),
  );
}

export function accountingProfitAndLossCategoryFromJSON(
  jsonString: string,
): SafeParseResult<AccountingProfitAndLossCategory, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountingProfitAndLossCategory$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountingProfitAndLossCategory' from JSON`,
  );
}
