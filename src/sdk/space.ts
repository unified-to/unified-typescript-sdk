/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { kmsCreateKmsSpace } from "../funcs/kmsCreateKmsSpace.js";
import { kmsGetKmsSpace } from "../funcs/kmsGetKmsSpace.js";
import { kmsListKmsSpaces } from "../funcs/kmsListKmsSpaces.js";
import { kmsPatchKmsSpace } from "../funcs/kmsPatchKmsSpace.js";
import { kmsRemoveKmsSpace } from "../funcs/kmsRemoveKmsSpace.js";
import { kmsUpdateKmsSpace } from "../funcs/kmsUpdateKmsSpace.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Space extends ClientSDK {
  /**
   * Create a space
   */
  async createKmsSpace(
    request: operations.CreateKmsSpaceRequest,
    options?: RequestOptions,
  ): Promise<shared.KmsSpace> {
    return unwrapAsync(kmsCreateKmsSpace(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a space
   */
  async getKmsSpace(
    request: operations.GetKmsSpaceRequest,
    options?: RequestOptions,
  ): Promise<shared.KmsSpace> {
    return unwrapAsync(kmsGetKmsSpace(
      this,
      request,
      options,
    ));
  }

  /**
   * List all spaces
   */
  async listKmsSpaces(
    request: operations.ListKmsSpacesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.KmsSpace>> {
    return unwrapAsync(kmsListKmsSpaces(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a space
   */
  async patchKmsSpace(
    request: operations.PatchKmsSpaceRequest,
    options?: RequestOptions,
  ): Promise<shared.KmsSpace> {
    return unwrapAsync(kmsPatchKmsSpace(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a space
   */
  async removeKmsSpace(
    request: operations.RemoveKmsSpaceRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveKmsSpaceResponse | undefined> {
    return unwrapAsync(kmsRemoveKmsSpace(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a space
   */
  async updateKmsSpace(
    request: operations.UpdateKmsSpaceRequest,
    options?: RequestOptions,
  ): Promise<shared.KmsSpace> {
    return unwrapAsync(kmsUpdateKmsSpace(
      this,
      request,
      options,
    ));
  }
}
