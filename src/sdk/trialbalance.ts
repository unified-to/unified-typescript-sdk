/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingGetAccountingTrialbalance } from "../funcs/accountingGetAccountingTrialbalance.js";
import { accountingListAccountingTrialbalances } from "../funcs/accountingListAccountingTrialbalances.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Trialbalance extends ClientSDK {
  /**
   * Retrieve a trialbalance
   */
  async getAccountingTrialbalance(
    request: operations.GetAccountingTrialbalanceRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingTrialbalance> {
    return unwrapAsync(accountingGetAccountingTrialbalance(
      this,
      request,
      options,
    ));
  }

  /**
   * List all trialbalances
   */
  async listAccountingTrialbalances(
    request: operations.ListAccountingTrialbalancesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.AccountingTrialbalance>> {
    return unwrapAsync(accountingListAccountingTrialbalances(
      this,
      request,
      options,
    ));
  }
}
