/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingGetAccountingProfitloss } from "../funcs/accountingGetAccountingProfitloss.js";
import { accountingListAccountingProfitlosses } from "../funcs/accountingListAccountingProfitlosses.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Profitloss extends ClientSDK {
  /**
   * Retrieve a profitloss
   */
  async getAccountingProfitloss(
    request: operations.GetAccountingProfitlossRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingProfitloss> {
    return unwrapAsync(accountingGetAccountingProfitloss(
      this,
      request,
      options,
    ));
  }

  /**
   * List all profitlosses
   */
  async listAccountingProfitlosses(
    request: operations.ListAccountingProfitlossesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.AccountingProfitloss>> {
    return unwrapAsync(accountingListAccountingProfitlosses(
      this,
      request,
      options,
    ));
  }
}
