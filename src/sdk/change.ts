/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { taskGetTaskChange } from "../funcs/taskGetTaskChange.js";
import { taskListTaskChanges } from "../funcs/taskListTaskChanges.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Change extends ClientSDK {
  /**
   * Retrieve a change
   */
  async getTaskChange(
    request: operations.GetTaskChangeRequest,
    options?: RequestOptions,
  ): Promise<shared.TaskChange> {
    return unwrapAsync(taskGetTaskChange(
      this,
      request,
      options,
    ));
  }

  /**
   * List all changes
   */
  async listTaskChanges(
    request: operations.ListTaskChangesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.TaskChange>> {
    return unwrapAsync(taskListTaskChanges(
      this,
      request,
      options,
    ));
  }
}
