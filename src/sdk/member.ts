/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { martechCreateMartechMember } from "../funcs/martechCreateMartechMember.js";
import { martechGetMartechMember } from "../funcs/martechGetMartechMember.js";
import { martechListMartechMembers } from "../funcs/martechListMartechMembers.js";
import { martechPatchMartechMember } from "../funcs/martechPatchMartechMember.js";
import { martechRemoveMartechMember } from "../funcs/martechRemoveMartechMember.js";
import { martechUpdateMartechMember } from "../funcs/martechUpdateMartechMember.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Member extends ClientSDK {
  /**
   * Create a member
   */
  async createMartechMember(
    request: operations.CreateMartechMemberRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingMember> {
    return unwrapAsync(martechCreateMartechMember(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a member
   */
  async getMartechMember(
    request: operations.GetMartechMemberRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingMember> {
    return unwrapAsync(martechGetMartechMember(
      this,
      request,
      options,
    ));
  }

  /**
   * List all members
   */
  async listMartechMembers(
    request: operations.ListMartechMembersRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.MarketingMember>> {
    return unwrapAsync(martechListMartechMembers(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a member
   */
  async patchMartechMember(
    request: operations.PatchMartechMemberRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingMember> {
    return unwrapAsync(martechPatchMartechMember(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a member
   */
  async removeMartechMember(
    request: operations.RemoveMartechMemberRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveMartechMemberResponse | undefined> {
    return unwrapAsync(martechRemoveMartechMember(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a member
   */
  async updateMartechMember(
    request: operations.UpdateMartechMemberRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingMember> {
    return unwrapAsync(martechUpdateMartechMember(
      this,
      request,
      options,
    ));
  }
}
