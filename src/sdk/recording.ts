/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { recordingGetCalendarRecording } from "../funcs/recordingGetCalendarRecording.js";
import { recordingListCalendarRecordings } from "../funcs/recordingListCalendarRecordings.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Recording extends ClientSDK {
  /**
   * Retrieve a recording
   */
  async getCalendarRecording(
    request: operations.GetCalendarRecordingRequest,
    options?: RequestOptions,
  ): Promise<shared.CalendarRecording> {
    return unwrapAsync(recordingGetCalendarRecording(
      this,
      request,
      options,
    ));
  }

  /**
   * List all recordings
   */
  async listCalendarRecordings(
    request: operations.ListCalendarRecordingsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.CalendarRecording>> {
    return unwrapAsync(recordingListCalendarRecordings(
      this,
      request,
      options,
    ));
  }
}
