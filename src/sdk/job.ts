/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atsCreateAtsJob } from "../funcs/atsCreateAtsJob.js";
import { atsGetAtsJob } from "../funcs/atsGetAtsJob.js";
import { atsListAtsJobs } from "../funcs/atsListAtsJobs.js";
import { atsPatchAtsJob } from "../funcs/atsPatchAtsJob.js";
import { atsRemoveAtsJob } from "../funcs/atsRemoveAtsJob.js";
import { atsUpdateAtsJob } from "../funcs/atsUpdateAtsJob.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Job extends ClientSDK {
  /**
   * Create a job
   */
  async createAtsJob(
    request: operations.CreateAtsJobRequest,
    options?: RequestOptions,
  ): Promise<shared.AtsJob> {
    return unwrapAsync(atsCreateAtsJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a job
   */
  async getAtsJob(
    request: operations.GetAtsJobRequest,
    options?: RequestOptions,
  ): Promise<shared.AtsJob> {
    return unwrapAsync(atsGetAtsJob(
      this,
      request,
      options,
    ));
  }

  /**
   * List all jobs
   */
  async listAtsJobs(
    request: operations.ListAtsJobsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.AtsJob>> {
    return unwrapAsync(atsListAtsJobs(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a job
   */
  async patchAtsJob(
    request: operations.PatchAtsJobRequest,
    options?: RequestOptions,
  ): Promise<shared.AtsJob> {
    return unwrapAsync(atsPatchAtsJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a job
   */
  async removeAtsJob(
    request: operations.RemoveAtsJobRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveAtsJobResponse | undefined> {
    return unwrapAsync(atsRemoveAtsJob(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a job
   */
  async updateAtsJob(
    request: operations.UpdateAtsJobRequest,
    options?: RequestOptions,
  ): Promise<shared.AtsJob> {
    return unwrapAsync(atsUpdateAtsJob(
      this,
      request,
      options,
    ));
  }
}
