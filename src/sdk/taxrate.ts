/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingCreateAccountingTaxrate } from "../funcs/accountingCreateAccountingTaxrate.js";
import { accountingGetAccountingTaxrate } from "../funcs/accountingGetAccountingTaxrate.js";
import { accountingListAccountingTaxrates } from "../funcs/accountingListAccountingTaxrates.js";
import { accountingPatchAccountingTaxrate } from "../funcs/accountingPatchAccountingTaxrate.js";
import { accountingRemoveAccountingTaxrate } from "../funcs/accountingRemoveAccountingTaxrate.js";
import { accountingUpdateAccountingTaxrate } from "../funcs/accountingUpdateAccountingTaxrate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Taxrate extends ClientSDK {
  /**
   * Create a taxrate
   */
  async createAccountingTaxrate(
    request: operations.CreateAccountingTaxrateRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingTaxrate> {
    return unwrapAsync(accountingCreateAccountingTaxrate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a taxrate
   */
  async getAccountingTaxrate(
    request: operations.GetAccountingTaxrateRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingTaxrate> {
    return unwrapAsync(accountingGetAccountingTaxrate(
      this,
      request,
      options,
    ));
  }

  /**
   * List all taxrates
   */
  async listAccountingTaxrates(
    request: operations.ListAccountingTaxratesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.AccountingTaxrate>> {
    return unwrapAsync(accountingListAccountingTaxrates(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a taxrate
   */
  async patchAccountingTaxrate(
    request: operations.PatchAccountingTaxrateRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingTaxrate> {
    return unwrapAsync(accountingPatchAccountingTaxrate(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a taxrate
   */
  async removeAccountingTaxrate(
    request: operations.RemoveAccountingTaxrateRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveAccountingTaxrateResponse | undefined> {
    return unwrapAsync(accountingRemoveAccountingTaxrate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a taxrate
   */
  async updateAccountingTaxrate(
    request: operations.UpdateAccountingTaxrateRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingTaxrate> {
    return unwrapAsync(accountingUpdateAccountingTaxrate(
      this,
      request,
      options,
    ));
  }
}
