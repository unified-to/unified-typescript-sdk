/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { martechCreateMartechList } from "../funcs/martechCreateMartechList.js";
import { martechGetMartechList } from "../funcs/martechGetMartechList.js";
import { martechListMartechLists } from "../funcs/martechListMartechLists.js";
import { martechPatchMartechList } from "../funcs/martechPatchMartechList.js";
import { martechRemoveMartechList } from "../funcs/martechRemoveMartechList.js";
import { martechUpdateMartechList } from "../funcs/martechUpdateMartechList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class List extends ClientSDK {
  /**
   * Create a list
   */
  async createMartechList(
    request: operations.CreateMartechListRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingList> {
    return unwrapAsync(martechCreateMartechList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a list
   */
  async getMartechList(
    request: operations.GetMartechListRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingList> {
    return unwrapAsync(martechGetMartechList(
      this,
      request,
      options,
    ));
  }

  /**
   * List all lists
   */
  async listMartechLists(
    request: operations.ListMartechListsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.MarketingList>> {
    return unwrapAsync(martechListMartechLists(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a list
   */
  async patchMartechList(
    request: operations.PatchMartechListRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingList> {
    return unwrapAsync(martechPatchMartechList(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a list
   */
  async removeMartechList(
    request: operations.RemoveMartechListRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveMartechListResponse | undefined> {
    return unwrapAsync(martechRemoveMartechList(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a list
   */
  async updateMartechList(
    request: operations.UpdateMartechListRequest,
    options?: RequestOptions,
  ): Promise<shared.MarketingList> {
    return unwrapAsync(martechUpdateMartechList(
      this,
      request,
      options,
    ));
  }
}
