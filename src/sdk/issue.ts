/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { unifiedGetUnifiedIssue } from "../funcs/unifiedGetUnifiedIssue.js";
import { unifiedListUnifiedIssues } from "../funcs/unifiedListUnifiedIssues.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Issue extends ClientSDK {
  /**
   * Retrieve support issue
   */
  async getUnifiedIssue(
    request: operations.GetUnifiedIssueRequest,
    options?: RequestOptions,
  ): Promise<shared.Issue> {
    return unwrapAsync(unifiedGetUnifiedIssue(
      this,
      request,
      options,
    ));
  }

  /**
   * List support issues
   */
  async listUnifiedIssues(
    request: operations.ListUnifiedIssuesRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.Issue>> {
    return unwrapAsync(unifiedListUnifiedIssues(
      this,
      request,
      options,
    ));
  }
}
