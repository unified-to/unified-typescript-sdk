/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingCreateAccountingBill } from "../funcs/accountingCreateAccountingBill.js";
import { accountingGetAccountingBill } from "../funcs/accountingGetAccountingBill.js";
import { accountingListAccountingBills } from "../funcs/accountingListAccountingBills.js";
import { accountingPatchAccountingBill } from "../funcs/accountingPatchAccountingBill.js";
import { accountingRemoveAccountingBill } from "../funcs/accountingRemoveAccountingBill.js";
import { accountingUpdateAccountingBill } from "../funcs/accountingUpdateAccountingBill.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Bill extends ClientSDK {
  /**
   * Create a bill
   */
  async createAccountingBill(
    request: operations.CreateAccountingBillRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBill> {
    return unwrapAsync(accountingCreateAccountingBill(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a bill
   */
  async getAccountingBill(
    request: operations.GetAccountingBillRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBill> {
    return unwrapAsync(accountingGetAccountingBill(
      this,
      request,
      options,
    ));
  }

  /**
   * List all bills
   */
  async listAccountingBills(
    request: operations.ListAccountingBillsRequest,
    options?: RequestOptions,
  ): Promise<Array<shared.AccountingBill>> {
    return unwrapAsync(accountingListAccountingBills(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a bill
   */
  async patchAccountingBill(
    request: operations.PatchAccountingBillRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBill> {
    return unwrapAsync(accountingPatchAccountingBill(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a bill
   */
  async removeAccountingBill(
    request: operations.RemoveAccountingBillRequest,
    options?: RequestOptions,
  ): Promise<operations.RemoveAccountingBillResponse | undefined> {
    return unwrapAsync(accountingRemoveAccountingBill(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a bill
   */
  async updateAccountingBill(
    request: operations.UpdateAccountingBillRequest,
    options?: RequestOptions,
  ): Promise<shared.AccountingBill> {
    return unwrapAsync(accountingUpdateAccountingBill(
      this,
      request,
      options,
    ));
  }
}
